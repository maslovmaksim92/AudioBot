#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π "–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞" –¥–ª—è –í–ê–® –î–û–ú –º–æ–¥–µ–ª—å
"""

import asyncio
import asyncpg
import os
import uuid
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('/app/backend/.env')

# –î–∞–Ω–Ω—ã–µ –ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ (—É–±–æ—Ä—â–∏—Ü—ã –£–§–ò–¶)
OUTSOURCING_DATA = {
    '–Ø–Ω–≤–∞—Ä—å 2025': 1400700,
    '–§–µ–≤—Ä–∞–ª—å 2025': 2070600,
    '–ú–∞—Ä—Ç 2025': 2801400,
    '–ê–ø—Ä–µ–ª—å 2025': 2984100,
    '–ú–∞–π 2025': 3105900,
    '–ò—é–Ω—å 2025': 2923200,
    '–ò—é–ª—å 2025': 2862300,
    '–ê–≤–≥—É—Å—Ç 2025': 2801400,
    '–°–µ–Ω—Ç—è–±—Ä—å 2025': 2862300
}

async def add_outsourcing():
    """–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞"""
    db_url = os.environ.get('DATABASE_URL')
    
    if not db_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = await asyncpg.connect(db_url)
    
    try:
        print("\nüìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞' –¥–ª—è '–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å'...")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–ª—è –í–ê–® –î–û–ú –º–æ–¥–µ–ª—å
        await conn.execute("""
            DELETE FROM financial_transactions 
            WHERE company = '–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å' 
              AND category = '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞'
        """)
        print("‚úÖ –°—Ç–∞—Ä—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å UUID
        total = 0
        for month, amount in OUTSOURCING_DATA.items():
            transaction_id = str(uuid.uuid4())
            await conn.execute("""
                INSERT INTO financial_transactions 
                (id, date, type, category, amount, description, counterparty, project, company, created_at, updated_at)
                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
            """, 
                transaction_id,
                datetime.now(),
                'expense',
                '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
                amount,
                f'–£–±–æ—Ä—â–∏—Ü—ã –£–§–ò–¶ - {month}',
                '–£–§–ò–¶',
                month,
                '–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å',
                datetime.now(),
                datetime.now()
            )
            total += amount
            print(f"   ‚úÖ {month}: {amount:,.0f} ‚ÇΩ")
        
        print(f"\n‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(OUTSOURCING_DATA)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
        print(f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total:,.0f} ‚ÇΩ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞':")
        rows = await conn.fetch("""
            SELECT project as month, amount
            FROM financial_transactions
            WHERE company = '–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å' 
              AND category = '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞'
            ORDER BY project
        """)
        
        for row in rows:
            print(f"   {row['month']}: {row['amount']:,.0f} ‚ÇΩ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await conn.close()

if __name__ == "__main__":
    asyncio.run(add_outsourcing())
