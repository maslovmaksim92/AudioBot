#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä—É—á–Ω–æ–π –≤—ã—Ä—É—á–∫–∏ –¥–ª—è "–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å"
–ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import asyncio
import asyncpg
import os
import uuid
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('/app/backend/.env')

# –î–∞–Ω–Ω—ã–µ –≤—ã—Ä—É—á–∫–∏ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ (–∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞)
REVENUE_DATA = {
    '–Ø–Ω–≤–∞—Ä—å 2025': 4712459,
    '–§–µ–≤—Ä–∞–ª—å 2025': 4425900,
    '–ú–∞—Ä—Ç 2025': 4402000,
    '–ê–ø—Ä–µ–ª—å 2025': 5245890,
    '–ú–∞–π 2025': 5127353,
    '–ò—é–Ω—å 2025': 4418148,
    '–ò—é–ª—å 2025': 4597926,
    '–ê–≤–≥—É—Å—Ç 2025': 5899305,
    '–°–µ–Ω—Ç—è–±—Ä—å 2025': 5325049
}

async def add_revenue():
    """–î–æ–±–∞–≤–∏—Ç—å –≤—ã—Ä—É—á–∫—É –¥–ª—è –í–ê–® –î–û–ú –º–æ–¥–µ–ª—å"""
    db_url = os.environ.get('DATABASE_URL')
    
    if not db_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = await asyncpg.connect(db_url)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã monthly_revenue
        table_exists = await conn.fetchval("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'monthly_revenue'
            )
        """)
        
        if not table_exists:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ monthly_revenue –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return
        
        print("\nüìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –¥–ª—è '–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å'...")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
        await conn.execute("""
            DELETE FROM monthly_revenue 
            WHERE company = '–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å'
        """)
        print("‚úÖ –°—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ —É–¥–∞–ª–µ–Ω—ã")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ —Å UUID
        for month, revenue in REVENUE_DATA.items():
            record_id = str(uuid.uuid4())
            await conn.execute("""
                INSERT INTO monthly_revenue (id, month, revenue, company)
                VALUES ($1, $2, $3, $4)
            """, record_id, month, revenue, '–í–ê–® –î–û–ú –º–æ–¥–µ–ª—å')
            print(f"   ‚úÖ {month}: {revenue:,.0f} ‚ÇΩ")
        
        print(f"\n‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(REVENUE_DATA)} –∑–∞–ø–∏—Å–µ–π –≤—ã—Ä—É—á–∫–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ä—É—á–∫–∏ –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º:")
        companies = await conn.fetch("""
            SELECT company, COUNT(*) as count, SUM(revenue) as total
            FROM monthly_revenue 
            GROUP BY company
            ORDER BY company
        """)
        
        for row in companies:
            print(f"   {row['company']}: {row['count']} –º–µ—Å—è—Ü–µ–≤, –∏—Ç–æ–≥–æ {row['total']:,.0f} ‚ÇΩ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await conn.close()

if __name__ == "__main__":
    asyncio.run(add_revenue())
