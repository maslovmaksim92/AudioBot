"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è VasDom AudioBot
–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
"""
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import logging

from backend.app.config.settings import settings
from backend.app.routers import auth, houses, telegram

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title=settings.APP_TITLE,
    version=settings.APP_VERSION,
    description="–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–µ–π"
)

# CORS Middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=settings.cors_origins_list,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(auth.router, prefix="/api")
app.include_router(houses.router, prefix="/api")
app.include_router(telegram.router, prefix="/api")

@app.get("/")
async def root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π endpoint"""
    return {
        "app": settings.APP_TITLE,
        "version": settings.APP_VERSION,
        "status": "running"
    }

@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    return {
        "status": "healthy",
        "database": "connected",  # TODO: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
        "integrations": {
            "bitrix24": bool(settings.BITRIX24_WEBHOOK_URL),
            "telegram": bool(settings.TELEGRAM_BOT_TOKEN),
            "emergent_llm": bool(settings.EMERGENT_LLM_KEY)
        }
    }

@app.on_event("startup")
async def startup_event():
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("=" * 70)
    logger.info(f"üöÄ {settings.APP_TITLE} v{settings.APP_VERSION}")
    logger.info("=" * 70)
    logger.info(f"‚úÖ CORS origins: {', '.join(settings.cors_origins_list)}")
    logger.info(f"‚úÖ Bitrix24: {'Configured' if settings.BITRIX24_WEBHOOK_URL else 'Not configured'}")
    logger.info(f"‚úÖ Telegram: {'Configured' if settings.TELEGRAM_BOT_TOKEN else 'Not configured'}")
    logger.info(f"‚úÖ Database: {'Configured' if settings.DATABASE_URL else 'Not configured'}")
    logger.info("=" * 70)

@app.on_event("shutdown")
async def shutdown_event():
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üõë Shutting down VasDom AudioBot...")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(
        "app.main:app",
        host="0.0.0.0",
        port=8001,
        reload=True
    )
