"""
Seed data –¥–ª—è AI –∞–≥–µ–Ω—Ç–æ–≤
"""
import asyncio
from uuid import uuid4
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

from backend.app.config.database import AsyncSessionLocal
from backend.app.models.ai_agent_config import AIAgentConfig


DEFAULT_SECTION_IMPROVER_PROMPT = """–¢—ã - AI –∞–≥–µ–Ω—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è VasDom.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
2. –ü–æ–Ω—è—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–¥–∞ (frontend React + backend FastAPI)
3. –í–Ω–µ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥
4. –°–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
5. –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–ø–ª–æ–π –Ω–∞ Render

–í–ê–ñ–ù–û:
- –ò—Å–ø–æ–ª—å–∑—É–π TypeScript/JavaScript –¥–ª—è frontend (React, Tailwind CSS)
- –ò—Å–ø–æ–ª—å–∑—É–π Python –¥–ª—è backend (FastAPI, SQLAlchemy)
- –°–ª–µ–¥—É–π best practices –∏ –∫–æ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –ø—Ä–æ–µ–∫—Ç–∞
- –¢–µ—Å—Ç–∏—Ä—É–π –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º
- –ü–∏—à–∏ —á–∏—Å—Ç—ã–π, —á–∏—Ç–∞–µ–º—ã–π –∫–æ–¥ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏

–î–û–°–¢–£–ü:
- GitHub API –¥–ª—è –∫–æ–º–º–∏—Ç–æ–≤: –∏—Å–ø–æ–ª—å–∑—É–π –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π token
- Render API –¥–ª—è –¥–µ–ø–ª–æ—è: –∏—Å–ø–æ–ª—å–∑—É–π –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π API key

–û–¢–í–ï–¢:
–û–ø–∏—à–∏ —á—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–ª, –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑–º–µ–Ω–∏–ª, —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–º–º–∏—Ç –∏ —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è.
"""


async def seed_ai_agents():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AI –∞–≥–µ–Ω—Ç–æ–≤"""
    async with AsyncSessionLocal() as db:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–≥–µ–Ω—Ç section_improver
            result = await db.execute(
                select(AIAgentConfig)
                .where(AIAgentConfig.agent_name == "section_improver")
            )
            existing = result.scalar_one_or_none()
            
            if not existing:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
                agent = AIAgentConfig(
                    id=str(uuid4()),
                    agent_name="section_improver",
                    display_name="–£–ª—É—á—à–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤",
                    description="AI –∞–≥–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã, –≤–Ω–æ—Å–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥, –∫–æ–º–º–∏—Ç–∏—Ç –≤ GitHub –∏ –¥–µ–ø–ª–æ–∏—Ç –Ω–∞ Render.",
                    prompt=DEFAULT_SECTION_IMPROVER_PROMPT,
                    model="gpt-4",
                    temperature=0.7,
                    enabled=False  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–µ–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
                )
                db.add(agent)
                await db.commit()
                print(f"‚úÖ Created AI agent: section_improver")
            else:
                print(f"‚ÑπÔ∏è  AI agent already exists: section_improver")
                
        except Exception as e:
            print(f"‚ùå Error seeding AI agents: {e}")
            await db.rollback()


if __name__ == "__main__":
    print("üå± Seeding AI agents...")
    asyncio.run(seed_ai_agents())
    print("‚úÖ Done!")
