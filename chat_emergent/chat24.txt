python chat_logger.py
Home

The core product, VasDom AudioBot, is a comprehensive system for a cleaning company, featuring a FastAPI backend, React frontend, and integrations with Bitrix24 CRM, Emergent LLM (GPT-4 mini), and Telegram Bot. The application manages house data (490 houses, cleaning schedules, brigades, management companies), processes voice, and provides dashboard analytics. The primary problem to solve is to make the existing bot self-learning. This entails implementing: 1. **Export and Fine-tuning:** A mechanism to export `user_message`/`ai_response` pairs (filtered by positive ratings) and use them to fine-tune a local LLM (e.g., Llama). The AI service should dynamically switch between the external LLM and the local model. 2. **Retrieval from Logs (RAG):** An embedding service to compute and store message embeddings. Before calling the LLM, the system should retrieve similar past `ai_response` from logs based on cosine similarity and inject them into the system prompt. 3. **User Feedback Collection:** Add a `rating` field (1-5 stars) to `voice_logs` and an API endpoint (`POST /api/voice/feedback`) for users to submit feedback, with `log_id` included in the API response for client-side mapping. 4. **Periodic Re-evaluation and Retraining:** A cron job (`evaluate_model`) to compare the current model against benchmarks, log metrics, and automatically trigger `fine_tune.py` if performance drops below a threshold. All implementations must be production-ready, deployed on Render, and leverage real user data for continuous learning, with a strong emphasis on robustness and safety during deployment. The latest request is to integrate CRM call transcription for self-learning data.

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–µ—Ç–∫–∏ https://github.com/maslovmaksim92/AudioBot - —É –Ω–∞—Å —Ä–∞–±–æ–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –°–¥–µ–ª–∞–π –ø–æ –Ω–µ–≥–æ –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–∏—à–ª–∏ –æ—Ç—á–µ—Ç –ø–æ –∫–∞–∂–¥–æ–º—É —Ñ–∞–π–ª–≤ –≤ —Å–≤–æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–µ—Ç–∫–∏ https://github.com/maslovmaksim92/AudioBot - —É –Ω–∞—Å —Ä–∞–±–æ–∞–µ—Ç –ø—Ä# **–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ VasDom AudioBot - –°–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç** ## **üöÄ –û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞** **VasDom AudioBot** ‚Äî —ç—Ç–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è AI-—Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–Ω–∏–Ω–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π –≤ –ö–∞–ª—É–≥–µ, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 348 –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–º–∏ –¥–æ–º–∞–º–∏, 82 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ –≤ 6 –±—Ä–∏–≥–∞–¥–∞—Ö. --- ## **üìä –°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–æ–≤** | **–§–∞–π–ª** | **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ** | **–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏** | **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏** | **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏** | |----------|----------------|----------------------|----------------|----------------| | **üîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–û–ù–ù–´–ï –§–ê–ô–õ–´** | | `render.yaml` | –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–µ–ø–ª–æ—è | –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Render.com, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, —Å–±–æ—Ä–∫–∞ frontend+backend | Python, Node.js | PostgreSQL, Bitrix24, Telegram, Emergent LLM | | `requirements.txt` | Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ | 29 –±–∏–±–ª–∏–æ—Ç–µ–∫: FastAPI, SQLAlchemy, httpx, emergentintegrations | Python 3.9+ | Async HTTP, PostgreSQL, JWT | | `Procfile` | –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ | Uvicorn —Å–µ—Ä–≤–µ—Ä –¥–ª—è production | Uvicorn | Render deployment | | **üìÅ –ì–õ–ê–í–ù–´–ï –¢–û–ß–ö–ò –í–•–û–î–ê** | | `main.py` | –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ | –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Render | Python | vasdom_app.py | | `vasdom_app.py` | Legacy/Fallback –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ | –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π | FastAPI | app/main.py | | **üõ†Ô∏è BACKEND –ê–†–•–ò–¢–ï–ö–¢–£–†–ê** | | `app/main.py` | –û—Å–Ω–æ–≤–Ω–æ–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ | CORS, —Ä–æ—É—Ç–∏–Ω–≥, startup/shutdown —Å–æ–±—ã—Ç–∏—è | FastAPI 0.110.1 | PostgreSQL, –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤ | | `app/config/settings.py` | –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è | –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, CORS, API –∫–ª—é—á–∏ | Python dotenv | Bitrix24, Telegram, Emergent | | `app/config/database.py` | –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö | PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, Alembic –º–∏–≥—Ä–∞—Ü–∏–∏ | SQLAlchemy, asyncpg | PostgreSQL async | | **üìã –ú–û–î–ï–õ–ò –î–ê–ù–ù–´–•** | | `app/models/schemas.py` | Pydantic —Å—Ö–µ–º—ã | API –º–æ–¥–µ–ª–∏: VoiceMessage, Meeting, AITask, House | Pydantic 2.6+ | FastAPI validation | | **üîÄ API –†–û–£–¢–ï–†–´** | | `app/routers/dashboard.py` | –î–∞—à–±–æ—Ä–¥ API | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ CRM, health check, –º–µ—Ç—Ä–∏–∫–∏ –¥–æ–º–æ–≤ | FastAPI | Bitrix24 CRM | | `app/routers/voice.py` | –ì–æ–ª–æ—Å–æ–≤–æ–π AI | –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏–µ | FastAPI | Emergent LLM, PostgreSQL | | **ü§ñ AI –°–ï–†–í–ò–°–´** | | `app/services/ai_service.py` | AI –æ–±—Ä–∞–±–æ—Ç–∫–∞ | GPT-4 mini —á–µ—Ä–µ–∑ Emergent LLM, fallback AI | emergentintegrations | OpenAI GPT-4 mini | | `app/services/bitrix_service.py` | Bitrix24 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è | –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–º–æ–≤, —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á, CRM –æ–ø–µ—Ä–∞—Ü–∏–∏ | httpx async | Bitrix24 REST API | | `app/services/telegram_service.py` | Telegram –±–æ—Ç | –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞ | httpx | Telegram Bot API | | **‚ö° LEGACY/BACKUP** | | `backend/server.py` | Legacy —Å–µ—Ä–≤–µ—Ä | –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å, fallback –Ω–∞ –º–æ–Ω–æ–ª–∏—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É | FastAPI | app/main.py | | **üé® FRONTEND** | | `frontend/package.json` | Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ | React 19.0, Radix UI, Tailwind, 86 –ø–∞–∫–µ—Ç–æ–≤ | React, Tailwind CSS | Backend API | | `frontend/src/App.js` | –ì–ª–∞–≤–Ω—ã–π React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç | –†–æ—É—Ç–∏–Ω–≥, Layout, lazy loading –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ | React 19, React Router | AppContext | | **üìù –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø** | | `README.md` | –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è | 326 —Å—Ç—Ä–æ–∫: –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, API, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞, –¥–µ–ø–ª–æ–π | Markdown | –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã | --- ## **üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑** ### **Backend (FastAPI + PostgreSQL)** - **–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**: —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ config, models, routers, services - **Async/await**: –ø–æ–ª–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ - **Database**: PostgreSQL —Å Alembic –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ - **API**: RESTful —Å Pydantic validation ### **Frontend (React + Tailwind)** - **React 19.0**: –Ω–æ–≤–µ–π—à–∞—è –≤–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ - **Radix UI**: 30+ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è UI - **Lazy loading**: –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ - **Context API**: –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ### **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏** - **Bitrix24 CRM**: 348 –¥–æ–º–æ–≤, batch –∑–∞–≥—Ä—É–∑–∫–∞ - **Telegram Bot**: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º - **Emergent LLM**: GPT-4 mini –¥–ª—è AI - **PostgreSQL**: —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏–µ AI, –ª–æ–≥–∏, –ø–ª–∞–Ω–µ—Ä–∫–∏ --- ## **üìà –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞** - **üè† –î–æ–º–æ–≤**: 348 (–∏–∑ CRM Bitrix24) - **üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤**: 82 –≤ 6 –±—Ä–∏–≥–∞–¥–∞—Ö - **üìç –ì–µ–æ–≥—Ä–∞—Ñ–∏—è**: –ö–∞–ª—É–≥–∞, 6 —Ä–∞–π–æ–Ω–æ–≤ - **ü§ñ AI –º–æ–¥–µ–ª—å**: GPT-4 mini —á–µ—Ä–µ–∑ Emergent LLM - **üìä –°—Ç–∞—Ç—É—Å**: Production Ready (—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ https://audiobot-qci2.onrender.com) --- ## **‚úÖ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏** ### **–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å** - Fallback —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –∫–∞–∂–¥–æ–º —É—Ä–æ–≤–Ω–µ - Graceful degradation –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ - Extensive error handling –∏ logging ### **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å** - Async –æ–ø–µ—Ä–∞—Ü–∏–∏ - –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ CRM –¥–∞–Ω–Ω—ã—Ö - Batch API –≤—ã–∑–æ–≤—ã - Lazy loading frontend ### **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** - Environment variables –¥–ª—è —Å–µ–∫—Ä–µ—Ç–æ–≤ - CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - API –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Pydantic . ///// –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ, –Ω–∞—Å—Ç—Ä–∏–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –¥–∞—à–±–ª–æ—Ä–∫–∞ "–∂–∏–≤–æ–π —Ä–∞–∑–≥–æ–≤–æ

The "VasDom AudioBot" is an AI-powered business management application for a cleaning and construction company, primarily focused on integrating with Bitrix24 CRM to manage multi-apartment buildings and cleaning brigades. The application features a FastAPI backend, React frontend, PostgreSQL, voice capabilities, and AI (Emergent LLM). Initial requirements centered on enhancing "Houses Management" by loading 490 houses from Bitrix24 (Category ID 34) with detailed information (apartments, floors, addresses, tariffs, multi-month cleaning schedules). The "Houses Management" (Works) page needed a visually appealing "–†–Ø–î–û–ú" logo, gradient designs, a calendar, CSV export, sorting, and view toggling. Specific user requests included making addresses clickable to open Google Maps, and adding a "Create House" button that creates an entry in Bitrix24, with "address" as the sole mandatory field. Subsequent critical feedback highlighted incorrect management company and assigned personnel data from Bitrix24, necessitating the system to correctly map Bitrix24's `CompanyTitle`, `AssignedName`, and derive brigade names. Finally, the user requested a new "–ó–∞–¥–∞—á–∏" (Tasks) tab, enabling creation, viewing, and synchronization of tasks with Bitrix24, including statistics and responsible personnel assignment, along with additional UI "glow" effects. The `README.md` also required comprehensive updates.

The "VasDom AudioBot" is an AI-powered business management application for a cleaning and construction company, integrated with Bitrix24 CRM to manage multi-apartment buildings and cleaning brigades. The user's primary goal was to enhance "Houses Management" by correctly loading 490 houses, 29 management companies, and detailed house information from Bitrix24, including multi-month cleaning schedules. Recent explicit requests included: 1. Making "Houses Management" visually engaging ("–í–ê–£ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª"), integrating a user-provided logo, and making addresses clickable to Google Maps. 2. Adding a "Create House" button that creates an entry in Bitrix24 with address as the mandatory field. 3. Correcting management company (–£–ö) and assigned personnel data from Bitrix24, specifically mapping `CompanyTitle`, `AssignedName`, `AssignedSecondName`, `AssignedLastName`, and deriving brigade names. 4. Adding a new "Tasks" tab to synchronize with Bitrix24, allowing task creation and viewing with statistics and filtering. 5. Updating `README.md` to reflect the current application state (structure, functions, links, keys). 6. Implementing glowing/gradient visual effects ("–ø–µ—Ä–µ–ª–∏–≤–∞–Ω–∏–µ") on UI elements.

üìã –ü–û–õ–ù–ê–Ø –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø VasDom AudioBot üåê –û–°–ù–û–í–ù–´–ï –°–°–´–õ–ö–ò: –ü—Ä–æ–¥–∞–∫—à–Ω URLs: Render App: https://audiobot-qci2.onrender.com GitHub Repo: https://github.com/maslovmaksim92/AudioBot Bitrix24 Portal: https://vas-dom.bitrix24.ru API Endpoints: Base URL: https://audiobot-qci2.onrender.com/api # –û—Å–Ω–æ–≤–Ω—ã–µ endpoints GET /api/health - Health check GET /api/dashboard - Dashboard —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ GET /api/cleaning/houses - –°–ø–∏—Å–æ–∫ –¥–æ–º–æ–≤ (—Å—Ç–∞—Ä—ã–π, 348 –¥–æ–º–æ–≤) GET /api/cleaning/houses-490 - –ù–æ–≤—ã–π endpoint (490 –¥–æ–º–æ–≤) ‚úÖ GET /api/force-houses-490 - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ ‚úÖ GET /api/debug-houses - –û—Ç–ª–∞–¥–æ—á–Ω—ã–π endpoint ‚úÖ GET /api/version-check - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –∫–æ–¥–∞ ‚úÖ # –ó–∞–¥–∞—á–∏ GET /api/tasks - –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á Bitrix24 POST /api/tasks - –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ GET /api/tasks/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á GET /api/tasks/users - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è # –¢–µ–ª–µ–≥—Ä–∞–º POST /telegram/webhook - Webhook –¥–ª—è Telegram –±–æ—Ç–∞ üîó BITRIX24 –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: Webhook URL: https://vas-dom.bitrix24.ru/rest/1/4l8hq1gqgodjt7yo/ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–¥–µ–ª–æ–∫: ‚ùå –°—Ç–∞—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: CATEGORY_ID=2 (348 –¥–æ–º–æ–≤) ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: CATEGORY_ID=34 (490 –¥–æ–º–æ–≤) –û—Å–Ω–æ–≤–Ω—ã–µ API –º–µ—Ç–æ–¥—ã Bitrix24: # –°–¥–µ–ª–∫–∏ (–¥–æ–º–∞) GET {webhook}/crm.deal.list.json?filter[CATEGORY_ID]=34 # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ GET {webhook}/user.get.json?ID={user_id} # –ö–æ–º–ø–∞–Ω–∏–∏ GET {webhook}/crm.company.get.json?id={company_id} # –ó–∞–¥–∞—á–∏ GET {webhook}/tasks.task.list.json POST {webhook}/tasks.task.add.json GET {webhook}/user.get.json üè† –ü–û–õ–Ø –î–û–ú–û–í –í BITRIX24: –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Å–¥–µ–ª–æ–∫: 'ID' - ID —Å–¥–µ–ª–∫–∏ 'TITLE' - –ê–¥—Ä–µ—Å –¥–æ–º–∞ 'STAGE_ID' - –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ 'DATE_CREATE' - –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è 'OPPORTUNITY' - –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ 'CATEGORY_ID' - –ö–∞—Ç–µ–≥–æ—Ä–∏—è (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 34) 'ASSIGNED_BY_ID' - –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'COMPANY_ID' - –°–≤—è–∑–∞–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ–ª—è –¥–æ–º–æ–≤: 'UF_CRM_1669561599956' - –ê–¥—Ä–µ—Å –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω–æ–≥–æ –¥–æ–º–∞ 'UF_CRM_1669704529022' - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä 'UF_CRM_1669705507390' - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—ä–µ–∑–¥–æ–≤ 'UF_CRM_1669704631166' - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–∂–µ–π 'UF_CRM_1669706387893' - –¢–∞—Ä–∏—Ñ/–ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –ì—Ä–∞—Ñ–∏–∫–∏ —É–±–æ—Ä–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º: –°–ï–ù–¢–Ø–ë–†–¨ 2025: 'UF_CRM_1741592774017' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –°–µ–Ω—Ç—è–±—Ä—å 2025 'UF_CRM_1741592855565' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –°–µ–Ω—Ç—è–±—Ä—å 2025 'UF_CRM_1741592892232' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –°–µ–Ω—Ç—è–±—Ä—å 2025 'UF_CRM_1741592945060' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –°–µ–Ω—Ç—è–±—Ä—å 2025 –û–ö–¢–Ø–ë–†–¨ 2025: 'UF_CRM_1741593004888' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –û–∫—Ç—è–±—Ä—å 2025 'UF_CRM_1741593047994' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –û–∫—Ç—è–±—Ä—å 2025 'UF_CRM_1741593067418' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –û–∫—Ç—è–±—Ä—å 2025 'UF_CRM_1741593115407' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –û–∫—Ç—è–±—Ä—å 2025 –ù–û–Ø–ë–†–¨ 2025: 'UF_CRM_1741593156926' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –ù–æ—è–±—Ä—å 2025 'UF_CRM_1741593210242' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –ù–æ—è–±—Ä—å 2025 'UF_CRM_1741593231558' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –ù–æ—è–±—Ä—å 2025 'UF_CRM_1741593285121' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –ù–æ—è–±—Ä—å 2025 –î–ï–ö–ê–ë–†–¨ 2025: 'UF_CRM_1741593340713' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –î–µ–∫–∞–±—Ä—å 2025 'UF_CRM_1741593387667' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –î–µ–∫–∞–±—Ä—å 2025 'UF_CRM_1741593408621' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –î–µ–∫–∞–±—Ä—å 2025 'UF_CRM_1741593452062' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –î–µ–∫–∞–±—Ä—å 2025 ‚öôÔ∏è –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø: Backend (.env): # Bitrix24 BITRIX24_WEBHOOK_URL="https://vas-dom.bitrix24.ru/rest/1/4l8hq1gqgodjt7yo/" # Telegram BOT_TOKEN="7860360375:AAEVEQCbsqCnP-aHJOlqOCHaTwginuLNe0E" TELEGRAM_BOT_TOKEN="8327964029:AAHBMITlIY8ZWLn34mpg92d1-Cb-8RXTSmQ" TELEGRAM_WEBHOOK_URL="https://audiobot-qci2.onrender.com/telegram/webhook" # AI EMERGENT_LLM_KEY="sk-emergent-0A408AfAeF26aCd5aB" OPENROUTER_API_KEY="sk-or-v1-d1f50246cd027109960ldfb432d72441ea00c99d49a96729a78125c61ac4dd" # CORS CORS_ORIGINS="https://audiobot-qci2.onrender.com,*" Frontend (.env): REACT_APP_BACKEND_URL=https://audiobot-qci2.onrender.com WDS_SOCKET_PORT=443 üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê: /app/ ‚îú‚îÄ‚îÄ backend/ ‚îÇ ‚îú‚îÄ‚îÄ app/ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ main.py - FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ config/ ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ settings.py - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ database.py - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ services/ ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ bitrix_service.py - Bitrix24 API ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ ai_service.py - AI —Å–µ—Ä–≤–∏—Å ‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ telegram_service.py - Telegram –±–æ—Ç ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ routers/ ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ cleaning.py - API –¥–æ–º–æ–≤ ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ tasks.py - API –∑–∞–¥–∞—á ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ dashboard.py - Dashboard ‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ telegram.py - Telegram webhook ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ models/ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ schemas.py - Pydantic –º–æ–¥–µ–ª–∏ ‚îÇ ‚îú‚îÄ‚îÄ .env - Environment variables ‚îÇ ‚îî‚îÄ‚îÄ requirements.txt - Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ‚îú‚îÄ‚îÄ frontend/ ‚îÇ ‚îú‚îÄ‚îÄ src/ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ App.js - –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ components/ ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ Dashboard/Dashboard.js - Dashboard UI ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ Works/Works.js - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–∞–º–∏ ‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ Tasks/Tasks.js - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ context/ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ apiService.js - API –∫–ª–∏–µ–Ω—Ç ‚îÇ ‚îú‚îÄ‚îÄ .env - Frontend variables ‚îÇ ‚îî‚îÄ‚îÄ package.json - Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ /// –ø—Ä–æ–∞–Ω–∏–ª–∏–∑–∏—Ä—É–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –°–µ–π—á–∞—Å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∫–∞—Ä–æ—Ç–æ—á–∫–∏ –¥–æ–º–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–æ–º–∞–º –Ω–µ —Ä–ø–æ–≥—Ä—É–∂–∞–µ—Ç—Å—è

The user's primary goal is to manage cleaning services for residential properties using a "VasDom AudioBot" application. The core problem at the start was that house cards were not loading, and house information was incomplete or incorrect. This led to a series of requirements: 1. **Correct House Data Loading**: The application must load 490 houses from Bitrix24 using `CATEGORY_ID=34` (not the old `CATEGORY_ID=2` for 348 houses). 2. **API Endpoints**: Implement and use `/api/cleaning/houses-490`, `/api/force-houses-490`, `/api/debug-houses`, `/api/dashboard`, `/api/health`, `/api/tasks`, `/api/tasks/stats`, `/api/tasks/users`, `/telegram/webhook`. 3. **Environment Configuration**: Correctly set `BITRIX24_WEBHOOK_URL`, `BOT_TOKEN`, `TELEGRAM_BOT_TOKEN`, `TELEGRAM_WEBHOOK_URL`, `EMERGENT_LLM_KEY`, `OPENROUTER_API_KEY`, `CORS_ORIGINS` in backend, and `REACT_APP_BACKEND_URL` in frontend. 4. **UX Improvements (Phase 1)**: Implement a progress bar and skeleton loading for house data. 5. **Functional Enhancements (Phase 2)**: Add search, filtering (by brigades, statuses, cleaning dates), and sorting (by address, brigades, apartments, last cleaning date, problem status) for houses. Enhance house cards with detailed information like cleaning schedules, apartment/entrance/floor counts, management company, contact info, and interactive buttons. 6. **UI/UX Improvements (Phase 3)**: Ensure responsiveness for mobile, virtualization, and pagination for large datasets. Correctly display management company (–£–ö) names and complete cleaning schedules for all relevant months. 7. **Analytics and Reports (Phase 4)**: Integrate a dashboard with KPIs (houses, apartments, floors, entrances, employees), brigade performance analysis, a cleaning calendar, and management company reports. 8. **Production Readiness**: Ensure all fixes and features are production-ready, specifically addressing correct –£–ö data and accurate cleaning type descriptions. The current stage is debugging the backend to correctly retrieve and display cleaning types, which are currently showing as numerical IDs ("–¢–∏–ø 2468") instead of descriptive text.

Balance Coin
587,43


User Avatar

info

code
Code

preview
Preview

Deploy
Deploy
image.png
üìã –ü–û–õ–ù–ê–Ø –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø VasDom AudioBot

üåê –û–°–ù–û–í–ù–´–ï –°–°–´–õ–ö–ò:

–ü—Ä–æ–¥–∞–∫—à–Ω URLs:

Render App: https://audiobot-qci2.onrender.com

GitHub Repo: https://github.com/maslovmaksim92/AudioBot

Bitrix24 Portal: https://vas-dom.bitrix24.ru

API Endpoints:

Base URL: https://audiobot-qci2.onrender.com/api

# –û—Å–Ω–æ–≤–Ω—ã–µ endpoints

GET /api/health - Health check

GET /api/dashboard - Dashboard —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

GET /api/cleaning/houses - –°–ø–∏—Å–æ–∫ –¥–æ–º–æ–≤ (—Å—Ç–∞—Ä—ã–π, 348 –¥–æ–º–æ–≤)

GET /api/cleaning/houses-490 - –ù–æ–≤—ã–π endpoint (490 –¥–æ–º–æ–≤) ‚úÖ

GET /api/force-houses-490 - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ ‚úÖ

GET /api/debug-houses - –û—Ç–ª–∞–¥–æ—á–Ω—ã–π endpoint ‚úÖ

GET /api/version-check - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –∫–æ–¥–∞ ‚úÖ

# –ó–∞–¥–∞—á–∏

GET /api/tasks - –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á Bitrix24

POST /api/tasks - –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏

GET /api/tasks/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á

GET /api/tasks/users - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è

# –¢–µ–ª–µ–≥—Ä–∞–º

POST /telegram/webhook - Webhook –¥–ª—è Telegram –±–æ—Ç–∞

üîó BITRIX24 –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø:

Webhook URL:

https://vas-dom.bitrix24.ru/rest/1/4l8hq1gqgodjt7yo/

–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–¥–µ–ª–æ–∫:

‚ùå –°—Ç–∞—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: CATEGORY_ID=2 (348 –¥–æ–º–æ–≤)

‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: CATEGORY_ID=34 (490 –¥–æ–º–æ–≤)

–û—Å–Ω–æ–≤–Ω—ã–µ API –º–µ—Ç–æ–¥—ã Bitrix24:

# –°–¥–µ–ª–∫–∏ (–¥–æ–º–∞)

GET {webhook}/crm.deal.list.json?filter[CATEGORY_ID]=34

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

GET {webhook}/user.get.json?ID={user_id}

# –ö–æ–º–ø–∞–Ω–∏–∏

GET {webhook}/crm.company.get.json?id={company_id}

# –ó–∞–¥–∞—á–∏

GET {webhook}/tasks.task.list.json

POST {webhook}/tasks.task.add.json

GET {webhook}/user.get.json

üè† –ü–û–õ–Ø –î–û–ú–û–í –í BITRIX24:

–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Å–¥–µ–ª–æ–∫:

'ID' - ID —Å–¥–µ–ª–∫–∏

'TITLE' - –ê–¥—Ä–µ—Å –¥–æ–º–∞

'STAGE_ID' - –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏

'DATE_CREATE' - –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è

'OPPORTUNITY' - –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏

'CATEGORY_ID' - –ö–∞—Ç–µ–≥–æ—Ä–∏—è (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 34)

'ASSIGNED_BY_ID' - –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

'COMPANY_ID' - –°–≤—è–∑–∞–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ–ª—è –¥–æ–º–æ–≤:

'UF_CRM_1669561599956' - –ê–¥—Ä–µ—Å –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω–æ–≥–æ –¥–æ–º–∞

'UF_CRM_1669704529022' - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä

'UF_CRM_1669705507390' - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—ä–µ–∑–¥–æ–≤

'UF_CRM_1669704631166' - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–∂–µ–π

'UF_CRM_1669706387893' - –¢–∞—Ä–∏—Ñ/–ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å

–ì—Ä–∞—Ñ–∏–∫–∏ —É–±–æ—Ä–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º:

–°–ï–ù–¢–Ø–ë–†–¨ 2025:

'UF_CRM_1741592774017' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –°–µ–Ω—Ç—è–±—Ä—å 2025

'UF_CRM_1741592855565' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –°–µ–Ω—Ç—è–±—Ä—å 2025

'UF_CRM_1741592892232' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –°–µ–Ω—Ç—è–±—Ä—å 2025

'UF_CRM_1741592945060' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –°–µ–Ω—Ç—è–±—Ä—å 2025

–û–ö–¢–Ø–ë–†–¨ 2025:

'UF_CRM_1741593004888' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –û–∫—Ç—è–±—Ä—å 2025

'UF_CRM_1741593047994' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –û–∫—Ç—è–±—Ä—å 2025

'UF_CRM_1741593067418' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –û–∫—Ç—è–±—Ä—å 2025

'UF_CRM_1741593115407' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –û–∫—Ç—è–±—Ä—å 2025

–ù–û–Ø–ë–†–¨ 2025:

'UF_CRM_1741593156926' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –ù–æ—è–±—Ä—å 2025

'UF_CRM_1741593210242' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –ù–æ—è–±—Ä—å 2025

'UF_CRM_1741593231558' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –ù–æ—è–±—Ä—å 2025

'UF_CRM_1741593285121' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –ù–æ—è–±—Ä—å 2025

–î–ï–ö–ê–ë–†–¨ 2025:

'UF_CRM_1741593340713' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 1 | –î–µ–∫–∞–±—Ä—å 2025

'UF_CRM_1741593387667' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 1 | –î–µ–∫–∞–±—Ä—å 2025

'UF_CRM_1741593408621' - –î–∞—Ç–∞ —É–±–æ—Ä–∫–∏ 2 | –î–µ–∫–∞–±—Ä—å 2025

'UF_CRM_1741593452062' - –¢–∏–ø —É–±–æ—Ä–∫–∏ 2 | –î–µ–∫–∞–±—Ä—å 2025

‚öôÔ∏è –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:

Backend (.env):

# Bitrix24

BITRIX24_WEBHOOK_URL="https://vas-dom.bitrix24.ru/rest/1/4l8hq1gqgodjt7yo/"

# Telegram

BOT_TOKEN="7860360375:AAEVEQCbsqCnP-aHJOlqOCHaTwginuLNe0E"

TELEGRAM_BOT_TOKEN="8327964029:AAHBMITlIY8ZWLn34mpg92d1-Cb-8RXTSmQ"

TELEGRAM_WEBHOOK_URL="https://audiobot-qci2.onrender.com/telegram/webhook"

# AI

EMERGENT_LLM_KEY="sk-emergent-0A408AfAeF26aCd5aB"

OPENROUTER_API_KEY="sk-...4dd"

# CORS

CORS_ORIGINS="https://audiobot-qci2.onrender.com,*"

Frontend (.env):

REACT_APP_BACKEND_URL=https://audiobot-qci2.onrender.com

WDS_SOCKET_PORT=443

üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:

/app/

‚îú‚îÄ‚îÄ backend/

‚îÇ ‚îú‚îÄ‚îÄ app/

‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ main.py - FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ config/

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ settings.py - –ù–∞—Å—Ç—Ä–æ–π–∫–∏

‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ database.py - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö

‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ services/

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ bitrix_service.py - Bitrix24 API

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ ai_service.py - AI —Å–µ—Ä–≤–∏—Å

‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ telegram_service.py - Telegram –±–æ—Ç

‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ routers/

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ cleaning.py - API –¥–æ–º–æ–≤

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ tasks.py - API –∑–∞–¥–∞—á

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ dashboard.py - Dashboard

‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ telegram.py - Telegram webhook

‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ models/

‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ schemas.py - Pydantic –º–æ–¥–µ–ª–∏

‚îÇ ‚îú‚îÄ‚îÄ .env - Environment variables

‚îÇ ‚îî‚îÄ‚îÄ requirements.txt - Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

‚îú‚îÄ‚îÄ frontend/

‚îÇ ‚îú‚îÄ‚îÄ src/

‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ App.js - –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç

‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ components/

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ Dashboard/Dashboard.js - Dashboard UI

‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ Works/Works.js - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–∞–º–∏

‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ Tasks/Tasks.js - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏

‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ context/

‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ apiService.js - API –∫–ª–∏–µ–Ω—Ç

‚îÇ ‚îú‚îÄ‚îÄ .env - Frontend variables

‚îÇ ‚îî‚îÄ‚îÄ package.json - Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ /// –ø—Ä–æ–∞–Ω–∏–ª–∏–∑–∏—Ä—É–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –°–µ–π—á–∞—Å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∫–∞—Ä–æ—Ç–æ—á–∫–∏ –¥–æ–º–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–æ–º–∞–º –Ω–µ —Ä–ø–æ–≥—Ä—É–∂–∞–µ—Ç—Å—è

Sep 12, 01:32 PM

Copy
Scroll to bottom
Agent is waiting...
Message Neo
Attach
GitHub
Save to GitHub
Fork
Fork

Ultra


send
