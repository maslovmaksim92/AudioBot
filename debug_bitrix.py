#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è Bitrix24 API
"""

import asyncio
import httpx
import urllib.parse
import json

WEBHOOK_URL = "https://vas-dom.bitrix24.ru/rest/1/4l8hq1gqgodjt7yd/"

async def debug_bitrix_fields():
    """–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª–µ–π –≤ Bitrix24"""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –ø–æ–ª–µ–π Bitrix24 API...")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –£–ö –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
    params = {
        'select[0]': 'ID',
        'select[1]': 'TITLE', 
        'select[2]': 'STAGE_ID',
        'select[3]': 'COMPANY_ID',
        'select[4]': 'COMPANY_TITLE',        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –£–ö
        'select[5]': 'ASSIGNED_BY_ID',       # ID –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
        'select[6]': 'ASSIGNED_BY_NAME',     # –ò–º—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
        'select[7]': 'ASSIGNED_BY_LAST_NAME', # –§–∞–º–∏–ª–∏—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
        'select[8]': 'ASSIGNED_BY_SECOND_NAME', # –û—Ç—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
        'filter[CATEGORY_ID]': '34',
        'start': '0'
    }
    
    query_string = urllib.parse.urlencode(params)
    url = f"{WEBHOOK_URL}crm.deal.list.json?{query_string}"
    
    print(f"üîó URL: {url[:80]}...")
    
    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(url, timeout=30)
            
            if response.status_code == 200:
                data = response.json()
                deals = data.get('result', [])
                
                if deals:
                    first_deal = deals[0]
                    
                    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(deals)} —Å–¥–µ–ª–æ–∫")
                    print(f"üîç –ü–µ—Ä–≤–∞—è —Å–¥–µ–ª–∫–∞: {first_deal.get('TITLE')}")
                    print(f"üìã –í—Å–µ–≥–æ –ø–æ–ª–µ–π: {len(first_deal)}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –£–ö
                    print("\nüè¢ –ü–û–õ–Ø –£–ü–†–ê–í–õ–Ø–Æ–©–ï–ô –ö–û–ú–ü–ê–ù–ò–ò:")
                    print(f"  COMPANY_ID: {first_deal.get('COMPANY_ID', '–ù–ï–¢')}")
                    print(f"  COMPANY_TITLE: {first_deal.get('COMPANY_TITLE', '–ù–ï–¢')}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
                    print("\nüë§ –ü–û–õ–Ø –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–ì–û:")
                    print(f"  ASSIGNED_BY_ID: {first_deal.get('ASSIGNED_BY_ID', '–ù–ï–¢')}")
                    print(f"  ASSIGNED_BY_NAME: {first_deal.get('ASSIGNED_BY_NAME', '–ù–ï–¢')}")
                    print(f"  ASSIGNED_BY_LAST_NAME: {first_deal.get('ASSIGNED_BY_LAST_NAME', '–ù–ï–¢')}")
                    print(f"  ASSIGNED_BY_SECOND_NAME: {first_deal.get('ASSIGNED_BY_SECOND_NAME', '–ù–ï–¢')}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –í–°–ï –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è
                    print(f"\nüìù –í–°–ï –î–û–°–¢–£–ü–ù–´–ï –ü–û–õ–Ø ({len(first_deal)}):")
                    for key, value in first_deal.items():
                        if value:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è
                            print(f"  {key}: {str(value)[:50]}...")
                    
                    return first_deal
                else:
                    print("‚ùå –ù–µ—Ç —Å–¥–µ–ª–æ–∫ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 34")
                    return None
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text[:200]}")
                return None
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

async def main():
    result = await debug_bitrix_fields()
    if result:
        print(f"\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
    else:
        print(f"\n‚ùå –û—Ç–ª–∞–¥–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")

if __name__ == "__main__":
    asyncio.run(main())