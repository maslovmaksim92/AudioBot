import React, { useState, useEffect } from 'react';
import { useApp } from '../../context/AppContext';
import { Card, StatCard, Button, LoadingSpinner } from '../UI';

const Dashboard = () => {
  const { state, actions } = useApp();
  const { dashboardStats, loading, apiStatus } = state;
  const [districtStats, setDistrictStats] = useState(null);

  const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–∞–π–æ–Ω–∞–º
  useEffect(() => {
    const fetchDistrictStats = async () => {
      try {
        const response = await fetch(`${BACKEND_URL}/api/analytics/districts`);
        if (response.ok) {
          const data = await response.json();
          setDistrictStats(data.districts || []);
        }
      } catch (error) {
        console.log('District stats not available, using defaults');
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ fallback
        setDistrictStats([
          { name: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π', houses: 58, color: 'green' },
          { name: '–°–µ–≤–µ—Ä–Ω—ã–π', houses: 71, color: 'blue' },
          { name: '–ù–∏–∫–∏—Ç–∏–Ω—Å–∫–∏–π', houses: 62, color: 'purple' },
          { name: '–ñ–∏–ª–µ—Ç–æ–≤–æ', houses: 45, color: 'yellow' },
          { name: '–ü—Ä–∏–≥–æ—Ä–æ–¥', houses: 53, color: 'red' },
          { name: '–û–∫—Ä–∞–∏–Ω—ã', houses: 59, color: 'gray' }
        ]);
      }
    };

    if (dashboardStats.houses) {
      fetchDistrictStats();
    }
  }, [dashboardStats.houses, BACKEND_URL]);

  // –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¥–∞–Ω–Ω—ã–µ –∏–∑ Bitrix24)
  const mainStatCards = [
    { 
      title: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤', 
      value: dashboardStats.employees || 0, 
      icon: 'üë•', 
      color: 'blue',
      subtitle: '–í 6 –±—Ä–∏–≥–∞–¥–∞—Ö',
      trend: '+2 –∑–∞ –º–µ—Å—è—Ü'
    },
    { 
      title: '–î–æ–º–æ–≤ –≤ CRM', 
      value: dashboardStats.houses || 0, 
      icon: 'üè†', 
      color: 'green',
      subtitle: '–ò–∑ Bitrix24',
      trend: dashboardStats.houses >= 490 ? 'üî• –í—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã' : '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...'
    },
    { 
      title: '–ü–æ–¥—ä–µ–∑–¥–æ–≤', 
      value: dashboardStats.entrances || 0, 
      icon: 'üö™', 
      color: 'purple',
      subtitle: '~3 –Ω–∞ –¥–æ–º',
      trend: `${Math.round((dashboardStats.entrances || 0) / (dashboardStats.houses || 1) * 10) / 10} —Å—Ä–µ–¥./–¥–æ–º`
    },
    { 
      title: '–ö–≤–∞—Ä—Ç–∏—Ä', 
      value: dashboardStats.apartments || 0, 
      icon: 'üè†', 
      color: 'yellow',
      subtitle: '~75 –Ω–∞ –¥–æ–º',
      trend: `${Math.round((dashboardStats.apartments || 0) / (dashboardStats.houses || 1))} —Å—Ä–µ–¥./–¥–æ–º`
    },
    { 
      title: '–≠—Ç–∞–∂–µ–π', 
      value: dashboardStats.floors || 0, 
      icon: 'üìä', 
      color: 'red',
      subtitle: '~5 –Ω–∞ –¥–æ–º',
      trend: `${Math.round((dashboardStats.floors || 0) / (dashboardStats.houses || 1) * 10) / 10} —Å—Ä–µ–¥./–¥–æ–º`
    },
    { 
      title: '–ü–ª–∞–Ω–µ—Ä–æ–∫', 
      value: dashboardStats.meetings || 0, 
      icon: 'üé§', 
      color: 'indigo',
      subtitle: '–ó–∞–ø–∏—Å–∞–Ω–æ',
      trend: dashboardStats.meetings > 0 ? `${dashboardStats.meetings} –≥–æ—Ç–æ–≤—ã` : '–í –æ–∂–∏–¥–∞–Ω–∏–∏'
    }
  ];

  // –ö–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞–π–æ–Ω–æ–≤ (–¥–∞–Ω–Ω—ã–µ –∏–∑ analytics API –∏–ª–∏ fallback)
  const districtCards = districtStats ? districtStats.map(district => ({
    title: district.name,
    value: district.houses,
    icon: 'üèòÔ∏è',
    color: district.color,
    subtitle: '–¥–æ–º–æ–≤ –≤ —Ä–∞–π–æ–Ω–µ',
    trend: district.won_houses ? `${district.won_houses} –≤—ã–∏–≥—Ä–∞–Ω–æ` : '–í —Ä–∞–±–æ—Ç–µ'
  })) : [];

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  const additionalStats = [
    {
      title: 'AI –ó–∞–¥–∞—á',
      value: dashboardStats.ai_tasks || 0,
      icon: 'ü§ñ',
      color: 'cyan',
      subtitle: '–ê–∫—Ç–∏–≤–Ω—ã—Ö',
      trend: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è'
    },
    {
      title: '–í—ã–∏–≥—Ä–∞–Ω–æ –¥–æ–º–æ–≤',
      value: dashboardStats.won_houses || 0,
      icon: 'üèÜ',
      color: 'green',
      subtitle: '–£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫',
      trend: `${Math.round((dashboardStats.won_houses || 0) / (dashboardStats.houses || 1) * 100)}% —É—Å–ø–µ—Ö–∞`
    },
    {
      title: '–ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –¥–æ–º–æ–≤',
      value: dashboardStats.problem_houses || 0,
      icon: '‚ö†Ô∏è',
      color: 'red',
      subtitle: '–¢—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è',
      trend: dashboardStats.problem_houses > 0 ? '–ù—É–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞' : '–í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ'
    }
  ];

  const systemStatus = [
    { 
      name: 'Bitrix24 API', 
      status: dashboardStats.houses > 0 ? 'active' : 'warning',
      details: dashboardStats.data_source || 'CRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è'
    },
    { 
      name: 'GPT-4 mini (Emergent)', 
      status: 'active',
      details: 'AI —á–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω'
    },
    { 
      name: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π', 
      status: 'active',
      details: 'RAG —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç'
    },
    { 
      name: '–°–∞–º–æ–æ–±—É—á–µ–Ω–∏–µ', 
      status: 'active',
      details: '–ú–æ–¥–µ–ª—å –æ–±—É—á–∞–µ—Ç—Å—è'
    },
    { 
      name: 'PostgreSQL', 
      status: apiStatus === 'connected' ? 'active' : 'warning',
      details: apiStatus === 'connected' ? '–ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞' : '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è'
    }
  ];

  const handleRefresh = () => {
    actions.fetchDashboardStats();
    setDistrictStats(null); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–º —Ä–∞–π–æ–Ω—ã
  };

  if (loading && !dashboardStats.houses) {
    return (
      <div className="p-6 flex justify-center items-center min-h-96">
        <LoadingSpinner size="lg" text="üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Bitrix24..." />
      </div>
    );
  }

  return (
    <div className="p-6 space-y-6">
      {/* Header —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º */}
      <div className="flex justify-between items-center mb-8">
        <div>
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            üè† VasDom Dashboard
          </h1>
          <p className="text-gray-600">
            {dashboardStats.crm_sync_time ? 
              `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date(dashboardStats.crm_sync_time).toLocaleString('ru-RU')}` :
              '–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è ‚Ä¢ –ö–∞–ª—É–≥–∞'
            }
          </p>
        </div>
        <div className="flex gap-3">
          <Button 
            onClick={handleRefresh} 
            disabled={loading}
            className="bg-blue-600 hover:bg-blue-700 text-white"
          >
            {loading ? 'üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...' : 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å'}
          </Button>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
          üìä –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          {dashboardStats.houses >= 490 && (
            <span className="ml-2 px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
              üî• –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
            </span>
          )}
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-6">
          {mainStatCards.map((card, index) => (
            <StatCard 
              key={index} 
              {...card}
              className="transform hover:scale-105 transition-transform duration-200"
            />
          ))}
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–∞–π–æ–Ω–∞–º */}
      {districtCards.length > 0 && (
        <div className="mb-8">
          <h2 className="text-xl font-semibold text-gray-800 mb-4 flex items-center">
            üèòÔ∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–∞–π–æ–Ω–∞–º
            <span className="ml-2 text-sm text-gray-500">
              ({districtCards.reduce((sum, d) => sum + d.value, 0)} –¥–æ–º–æ–≤ –≤—Å–µ–≥–æ)
            </span>
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4">
            {districtCards.map((card, index) => (
              <StatCard 
                key={index} 
                {...card}
                className="transform hover:scale-105 transition-transform duration-200"
              />
            ))}
          </div>
        </div>
      )}

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold text-gray-800 mb-4">
          ‚ö° –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {additionalStats.map((card, index) => (
            <StatCard 
              key={index} 
              {...card}
              className="transform hover:scale-105 transition-transform duration-200"
            />
          ))}
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
      <Card className="mb-6">
        <div className="p-6">
          <h2 className="text-xl font-semibold text-gray-800 mb-4">
            üîß –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
            {systemStatus.map((service, index) => (
              <div key={index} className="flex items-center p-4 bg-gray-50 rounded-lg">
                <div className={`w-3 h-3 rounded-full mr-3 ${
                  service.status === 'active' ? 'bg-green-500' : 
                  service.status === 'warning' ? 'bg-yellow-500' : 'bg-red-500'
                }`}></div>
                <div>
                  <div className="font-medium text-sm">{service.name}</div>
                  <div className="text-xs text-gray-500">{service.details}</div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </Card>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Card>
        <div className="p-6">
          <h2 className="text-xl font-semibold text-gray-800 mb-4">
            üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <Button className="bg-blue-600 hover:bg-blue-700 text-white p-4 h-auto flex flex-col items-center">
              <span className="text-2xl mb-2">üí¨</span>
              <span>AI –ß–∞—Ç</span>
            </Button>
            <Button className="bg-green-600 hover:bg-green-700 text-white p-4 h-auto flex flex-col items-center">
              <span className="text-2xl mb-2">üé§</span>
              <span>–ü–ª–∞–Ω–µ—Ä–∫–∞</span>
            </Button>
            <Button className="bg-purple-600 hover:bg-purple-700 text-white p-4 h-auto flex flex-col items-center">
              <span className="text-2xl mb-2">üè†</span>
              <span>–î–æ–º–∞</span>
            </Button>
            <Button className="bg-orange-600 hover:bg-orange-700 text-white p-4 h-auto flex flex-col items-center">
              <span className="text-2xl mb-2">üìä</span>
              <span>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</span>
            </Button>
          </div>
        </div>
      </Card>
    </div>
  );
};

export default Dashboard;