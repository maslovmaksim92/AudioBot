import React, { useState, useEffect } from 'react';
import { Card } from '../UI';

const HousesStatistics = () => {
  const [statistics, setStatistics] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    loadStatistics();
  }, []);

  const loadStatistics = async () => {
    try {
      setLoading(true);
      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/houses-statistics`);
      const data = await response.json();
      
      if (data.status === 'success') {
        setStatistics(data);
        setError(null);
      } else {
        setError(data.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ' + err.message);
    } finally {
      setLoading(false);
    }
  };

  const SimpleBarChart = ({ data, title, color = "blue" }) => {
    if (!data || data.length === 0) return null;
    
    const maxValue = Math.max(...data.map(item => item.value));
    
    return (
      <Card title={title} className="h-64">
        <div className="space-y-2">
          {data.map((item, index) => (
            <div key={index} className="flex items-center space-x-2">
              <div className="w-20 text-xs text-gray-600 truncate">
                {item.name}
              </div>
              <div className="flex-1 bg-gray-200 rounded-full h-4 relative">
                <div 
                  className={`bg-${color}-500 h-4 rounded-full transition-all duration-500`}
                  style={{ width: `${(item.value / maxValue) * 100}%` }}
                />
                <span className="absolute right-2 top-0 text-xs text-gray-700 leading-4">
                  {item.value}
                </span>
              </div>
            </div>
          ))}
        </div>
      </Card>
    );
  };

  const StatCard = ({ title, value, subtitle, icon, color = "blue" }) => (
    <Card className="text-center">
      <div className="space-y-2">
        <div className="text-2xl">{icon}</div>
        <div className={`text-2xl font-bold text-${color}-600`}>{value}</div>
        <div className="text-sm font-medium text-gray-700">{title}</div>
        {subtitle && <div className="text-xs text-gray-500">{subtitle}</div>}
      </div>
    </Card>
  );

  const DistrictChart = ({ data }) => {
    if (!data || data.length === 0) return null;
    
    const colors = ['blue', 'green', 'purple', 'pink', 'indigo', 'yellow'];
    const total = data.reduce((sum, item) => sum + item.value, 0);
    
    return (
      <Card title="üó∫Ô∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–∞–π–æ–Ω–∞–º –ö–∞–ª—É–≥–∏" className="h-64">
        <div className="grid grid-cols-2 gap-2">
          {data.map((item, index) => {
            const percentage = Math.round((item.value / total) * 100);
            const color = colors[index % colors.length];
            
            return (
              <div key={index} className="text-center p-2 rounded-lg bg-gray-50">
                <div className={`text-lg font-bold text-${color}-600`}>
                  {item.value}
                </div>
                <div className="text-xs text-gray-600 truncate">
                  {item.name}
                </div>
                <div className="text-xs text-gray-500">
                  {percentage}%
                </div>
              </div>
            );
          })}
        </div>
      </Card>
    );
  };

  if (loading) {
    return (
      <div className="p-6">
        <div className="flex items-center justify-center h-64">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
          <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ–º–æ–≤...</span>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="p-6">
        <Card className="text-center">
          <div className="text-red-600">
            <div className="text-2xl">‚ùå</div>
            <div className="mt-2 text-sm">{error}</div>
            <button 
              onClick={loadStatistics}
              className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </Card>
      </div>
    );
  }

  const { summary, charts } = statistics;

  return (
    <div className="p-6 bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
      <div className="flex justify-between items-center mb-6">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–º–æ–≤ VasDom</h1>
          <p className="text-gray-600">–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ {summary.total_houses} –¥–æ–º–∞–º –∏–∑ Bitrix24</p>
        </div>
        <button 
          onClick={loadStatistics}
          className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å
        </button>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
        <StatCard 
          title="–í—Å–µ–≥–æ –¥–æ–º–æ–≤"
          value={summary.total_houses}
          subtitle="–í —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏"
          icon="üè†"
          color="blue"
        />
        <StatCard 
          title="–ü–æ–¥—ä–µ–∑–¥–æ–≤"
          value={summary.total_entrances}
          subtitle={`–°—Ä. ${summary.avg_entrances} –Ω–∞ –¥–æ–º`}
          icon="üö™"
          color="green"
        />
        <StatCard 
          title="–≠—Ç–∞–∂–µ–π"
          value={summary.total_floors}
          subtitle={`–°—Ä. ${summary.avg_floors} –Ω–∞ –¥–æ–º`}
          icon="üè¢"
          color="purple"
        />
        <StatCard 
          title="–ö–≤–∞—Ä—Ç–∏—Ä"
          value={summary.total_apartments}
          subtitle={`–°—Ä. ${summary.avg_apartments} –Ω–∞ –¥–æ–º`}
          icon="üè†"
          color="pink"
        />
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫–∏ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <SimpleBarChart 
          data={charts.entrances}
          title="üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–¥—ä–µ–∑–¥–∞–º"
          color="green"
        />
        
        <SimpleBarChart 
          data={charts.floors}
          title="üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —ç—Ç–∞–∂–∞–º"  
          color="purple"
        />
        
        <SimpleBarChart 
          data={charts.apartments}
          title="üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–≤–∞—Ä—Ç–∏—Ä–∞–º"
          color="pink"
        />
        
        <DistrictChart data={charts.districts} />
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="mt-6 grid grid-cols-1 md:grid-cols-3 gap-4">
        <Card title="üí° –ê–Ω–∞–ª–∏—Ç–∏–∫–∞">
          <div className="space-y-2 text-sm">
            <p>‚Ä¢ <strong>–°—Ä–µ–¥–Ω–∏–π –¥–æ–º:</strong> {summary.avg_entrances} –ø–æ–¥—ä–µ–∑–¥–∞, {summary.avg_floors} —ç—Ç–∞–∂–µ–π</p>
            <p>‚Ä¢ <strong>–í—Å–µ–≥–æ –∫–≤–∞—Ä—Ç–∏—Ä:</strong> {summary.total_apartments} –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏</p>
            <p>‚Ä¢ <strong>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞–π–æ–Ω—ã:</strong> {charts.districts?.length || 0} —Ä–∞–π–æ–Ω–æ–≤ –ö–∞–ª—É–≥–∏</p>
          </div>
        </Card>
        
        <Card title="üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏">
          <div className="space-y-2 text-sm">
            <p>‚Ä¢ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ <strong>Bitrix24 CRM</strong></p>
            <p>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–æ–º–æ–≤</p>
            <p>‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
          </div>
        </Card>
        
        <Card title="üìà –¢–µ–Ω–¥–µ–Ω—Ü–∏–∏">
          <div className="space-y-2 text-sm">
            <p>‚Ä¢ <strong>–ü—Ä–µ–æ–±–ª–∞–¥–∞—é—Ç:</strong> 5-—ç—Ç–∞–∂–Ω—ã–µ –¥–æ–º–∞</p>
            <p>‚Ä¢ <strong>–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ:</strong> 1-2 –ø–æ–¥—ä–µ–∑–¥–∞</p>
            <p>‚Ä¢ <strong>–†–∞–π–æ–Ω—ã:</strong> —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ</p>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default HousesStatistics;