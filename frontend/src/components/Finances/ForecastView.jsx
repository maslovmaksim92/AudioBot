import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { TrendingUp, TrendingDown, DollarSign, AlertTriangle, Target, Sparkles } from 'lucide-react';

const BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';

const SCENARIOS = {
  pessimistic: { name: '–ü–µ—Å—Å–∏–º–∏—Å—Ç–∏—á–Ω—ã–π', color: 'orange', icon: AlertTriangle },
  realistic: { name: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π', color: 'blue', icon: Target },
  optimistic: { name: '–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π', color: 'green', icon: Sparkles }
};

function ForecastView() {
  const [selectedCompany, setSelectedCompany] = useState('–í–ê–® –î–û–ú –§–ê–ö–¢');
  const [selectedScenario, setSelectedScenario] = useState('realistic');
  const [forecastData, setForecastData] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadForecast();
  }, [selectedCompany, selectedScenario]);

  const loadForecast = async () => {
    try {
      setLoading(true);
      const response = await axios.get(`${BACKEND_URL}/api/finances/forecast`, { 
        params: { 
          company: selectedCompany,
          scenario: selectedScenario
        } 
      });
      setForecastData(response.data);
    } catch (error) {
      console.error('Error loading forecast:', error);
    } finally {
      setLoading(false);
    }
  };

  const formatCurrency = (value) => {
    return new Intl.NumberFormat('ru-RU', { 
      style: 'currency', 
      currency: 'RUB', 
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(value);
  };

  if (loading) return <div className="text-center p-8">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞...</div>;
  if (!forecastData) return <div className="text-center p-8">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>;

  const { base_data, forecast, investor_metrics, scenario_info } = forecastData;
  const scenarioConfig = SCENARIOS[selectedScenario];
  const ScenarioIcon = scenarioConfig.icon;

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã */}
      <div className="flex justify-between items-center">
        <h2 className="text-3xl font-bold">–ü—Ä–æ–≥–Ω–æ–∑ 2026-2030</h2>
        <div className="flex gap-4">
          <Select value={selectedCompany} onValueChange={setSelectedCompany}>
            <SelectTrigger className="w-[250px]">
              <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="–í–ê–® –î–û–ú –§–ê–ö–¢">–í–ê–® –î–û–ú+–£–§–ò–¶</SelectItem>
              <SelectItem value="–£–§–ò–¶ –º–æ–¥–µ–ª—å">–£–§–ò–¶ –º–æ–¥–µ–ª—å</SelectItem>
            </SelectContent>
          </Select>

          <Select value={selectedScenario} onValueChange={setSelectedScenario}>
            <SelectTrigger className="w-[250px]">
              <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="pessimistic">üîª –ü–µ—Å—Å–∏–º–∏—Å—Ç–∏—á–Ω—ã–π</SelectItem>
              <SelectItem value="realistic">üéØ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π</SelectItem>
              <SelectItem value="optimistic">‚ú® –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ü–µ–Ω–∞—Ä–∏–∏ */}
      <Card className={`border-2 border-${scenarioConfig.color}-300 bg-${scenarioConfig.color}-50`}>
        <CardContent className="pt-6">
          <div className="flex items-center gap-3 mb-4">
            <ScenarioIcon className={`h-8 w-8 text-${scenarioConfig.color}-600`} />
            <div>
              <h3 className="text-xl font-bold">{scenarioConfig.name} —Å—Ü–µ–Ω–∞—Ä–∏–π</h3>
              <p className="text-sm text-gray-600">{scenario_info?.description || '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö'}</p>
            </div>
          </div>
          
          {/* –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Ä–æ—Å—Ç–∞ */}
          <div className="grid grid-cols-2 gap-4 text-sm mb-4">
            <div>
              <span className="text-gray-600">–†–æ—Å—Ç –≤—ã—Ä—É—á–∫–∏ (–≥–æ–¥):</span>
              <span className="ml-2 font-bold text-green-600">+{scenario_info?.revenue_growth_rate?.toFixed(1) || 0}%</span>
            </div>
            <div>
              <span className="text-gray-600">–†–æ—Å—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ (–≥–æ–¥):</span>
              <span className="ml-2 font-bold text-red-600">+{scenario_info?.expense_growth_rate?.toFixed(1) || 0}%</span>
            </div>
          </div>

          {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è */}
          {scenario_info?.detailed_description && (
            <div className="mt-4 space-y-3">
              {scenario_info.detailed_description.summary && (
                <div className="p-3 bg-white rounded-lg border-l-4 border-blue-500">
                  <p className="text-sm font-semibold text-blue-800">
                    üí° {scenario_info.detailed_description.summary}
                  </p>
                </div>
              )}
              
              {scenario_info.detailed_description.revenue_factors && scenario_info.detailed_description.revenue_factors.length > 0 && (
                <div className="p-3 bg-white rounded-lg">
                  <p className="text-sm font-bold text-green-700 mb-2">üìà –ó–∞ —Å—á–µ—Ç —á–µ–≥–æ —Ä–æ—Å—Ç –≤—ã—Ä—É—á–∫–∏:</p>
                  <ul className="space-y-1">
                    {scenario_info.detailed_description.revenue_factors.map((factor, idx) => (
                      <li key={idx} className="text-sm text-gray-700 flex items-start">
                        <span className="text-green-600 mr-2">‚Ä¢</span>
                        <span>{factor}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
              
              {scenario_info.detailed_description.expense_factors && scenario_info.detailed_description.expense_factors.length > 0 && (
                <div className="p-3 bg-white rounded-lg">
                  <p className="text-sm font-bold text-red-700 mb-2">üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤:</p>
                  <ul className="space-y-1">
                    {scenario_info.detailed_description.expense_factors.map((factor, idx) => (
                      <li key={idx} className="text-sm text-gray-700 flex items-start">
                        <span className="text-red-600 mr-2">‚Ä¢</span>
                        <span>{factor}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
              
              {/* –Æ–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π –ø–æ –≥–æ–¥–∞–º */}
              {scenario_info.detailed_description.unit_economics && selectedCompany === '–£–§–ò–¶ –º–æ–¥–µ–ª—å' && (
                <div className="p-3 bg-purple-50 rounded-lg border border-purple-200">
                  <p className="text-sm font-bold text-purple-800 mb-3">üí∞ –Æ–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∞ –Ω–∞ 1 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (2026-2030):</p>
                  <div className="overflow-x-auto">
                    <table className="min-w-full text-sm">
                      <thead>
                        <tr className="border-b border-purple-300">
                          <th className="text-left py-2 px-2 text-purple-700">–ì–æ–¥</th>
                          <th className="text-right py-2 px-2 text-green-700">–í—ã—Ä—É—á–∫–∞</th>
                          <th className="text-right py-2 px-2 text-red-700">–†–∞—Å—Ö–æ–¥—ã</th>
                          <th className="text-right py-2 px-2 text-blue-700">–ü—Ä–∏–±—ã–ª—å</th>
                          <th className="text-right py-2 px-2 text-gray-700">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</th>
                        </tr>
                      </thead>
                      <tbody>
                        {forecast && forecast.map((year, idx) => {
                          const unitRevenue = year.revenue / scenario_info.detailed_description.unit_economics.total_employees;
                          const unitExpense = year.expenses / scenario_info.detailed_description.unit_economics.total_employees;
                          const unitProfit = unitRevenue - unitExpense;
                          return (
                            <tr key={idx} className="border-b border-purple-100">
                              <td className="py-2 px-2 font-semibold">{year.year}</td>
                              <td className="text-right py-2 px-2 text-green-600">{Math.round(unitRevenue).toLocaleString('ru-RU')} ‚ÇΩ</td>
                              <td className="text-right py-2 px-2 text-red-600">{Math.round(unitExpense).toLocaleString('ru-RU')} ‚ÇΩ</td>
                              <td className="text-right py-2 px-2 text-blue-600">{Math.round(unitProfit).toLocaleString('ru-RU')} ‚ÇΩ</td>
                              <td className="text-right py-2 px-2 text-gray-600">{scenario_info.detailed_description.unit_economics.total_employees}</td>
                            </tr>
                          );
                        })}
                      </tbody>
                    </table>
                  </div>
                </div>
              )}
              
              {scenario_info.detailed_description.advantages && scenario_info.detailed_description.advantages.length > 0 && (
                <div className="p-3 bg-green-50 rounded-lg border border-green-200">
                  <p className="text-sm font-bold text-green-800 mb-2">‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è:</p>
                  <ul className="space-y-1">
                    {scenario_info.detailed_description.advantages.map((advantage, idx) => (
                      <li key={idx} className="text-sm text-gray-700 flex items-start">
                        <span className="text-green-600 mr-2">‚Ä¢</span>
                        <span>{advantage}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
              
              {scenario_info.detailed_description.disadvantages && scenario_info.detailed_description.disadvantages.length > 0 && (
                <div className="p-3 bg-red-50 rounded-lg border border-red-200">
                  <p className="text-sm font-bold text-red-800 mb-2">‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –∏ —Ä–∏—Å–∫–∏:</p>
                  <ul className="space-y-1">
                    {scenario_info.detailed_description.disadvantages.map((disadvantage, idx) => (
                      <li key={idx} className="text-sm text-gray-700 flex items-start">
                        <span className="text-red-600 mr-2">‚Ä¢</span>
                        <span>{disadvantage}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          )}

          {/* –Æ–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∞ */}
          {scenario_info?.detailed_description?.unit_economics && (
            <div className="mt-4 p-4 bg-gradient-to-r from-indigo-50 to-purple-50 rounded-lg border-2 border-indigo-200">
              <p className="text-sm font-bold text-indigo-800 mb-3">üí∞ –Æ–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∞ –Ω–∞ 1 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (2026):</p>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                <div className="bg-white p-3 rounded-lg shadow-sm">
                  <p className="text-xs text-gray-600 mb-1">–í—ã—Ä—É—á–∫–∞</p>
                  <p className="text-lg font-bold text-green-600">
                    {formatCurrency(scenario_info.detailed_description.unit_economics.revenue_per_employee)}
                  </p>
                </div>
                <div className="bg-white p-3 rounded-lg shadow-sm">
                  <p className="text-xs text-gray-600 mb-1">–†–∞—Å—Ö–æ–¥—ã</p>
                  <p className="text-lg font-bold text-red-600">
                    {formatCurrency(scenario_info.detailed_description.unit_economics.expense_per_employee)}
                  </p>
                </div>
                <div className="bg-white p-3 rounded-lg shadow-sm">
                  <p className="text-xs text-gray-600 mb-1">–ü—Ä–∏–±—ã–ª—å</p>
                  <p className="text-lg font-bold text-blue-600">
                    {formatCurrency(scenario_info.detailed_description.unit_economics.profit_per_employee)}
                  </p>
                </div>
                <div className="bg-white p-3 rounded-lg shadow-sm">
                  <p className="text-xs text-gray-600 mb-1">–í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
                  <p className="text-lg font-bold text-purple-600">
                    {scenario_info.detailed_description.unit_economics.total_employees}
                  </p>
                </div>
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –ë–∞–∑–æ–≤—ã–π –≥–æ–¥ */}
      <Card>
        <CardHeader className="bg-gray-100">
          <CardTitle>–ë–∞–∑–æ–≤—ã–π –≥–æ–¥ 2025</CardTitle>
        </CardHeader>
        <CardContent className="pt-6">
          <div className="grid grid-cols-4 gap-6">
            <div className="p-4 bg-green-50 rounded-lg">
              <div className="text-sm text-gray-600 mb-1">–í—ã—Ä—É—á–∫–∞</div>
              <div className="text-xl font-bold text-green-600">{formatCurrency(base_data.revenue)}</div>
            </div>
            <div className="p-4 bg-red-50 rounded-lg">
              <div className="text-sm text-gray-600 mb-1">–†–∞—Å—Ö–æ–¥—ã</div>
              <div className="text-xl font-bold text-red-600">{formatCurrency(base_data.expenses)}</div>
            </div>
            <div className="p-4 bg-blue-50 rounded-lg">
              <div className="text-sm text-gray-600 mb-1">–ü—Ä–∏–±—ã–ª—å</div>
              <div className="text-xl font-bold text-blue-600">{formatCurrency(base_data.profit)}</div>
            </div>
            <div className="p-4 bg-purple-50 rounded-lg">
              <div className="text-sm text-gray-600 mb-1">–ú–∞—Ä–∂–∞</div>
              <div className="text-xl font-bold text-purple-600">{base_data.margin}%</div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 2026-2030 */}
      <Card className={`border-2 border-${scenarioConfig.color}-200`}>
        <CardHeader className={`bg-${scenarioConfig.color}-100`}>
          <CardTitle className="flex items-center gap-2">
            <TrendingUp className={`h-6 w-6 text-${scenarioConfig.color}-600`} />
            –ü—Ä–æ–≥–Ω–æ–∑ 2026-2030
          </CardTitle>
        </CardHeader>
        <CardContent className="pt-6">
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className={`border-b-2 bg-${scenarioConfig.color}-50`}>
                  <th className="text-left p-3 font-bold">–ì–æ–¥</th>
                  <th className="text-right p-3 font-bold">–í—ã—Ä—É—á–∫–∞</th>
                  <th className="text-right p-3 font-bold">–†–∞—Å—Ö–æ–¥—ã</th>
                  <th className="text-right p-3 font-bold">–ü—Ä–∏–±—ã–ª—å</th>
                  <th className="text-right p-3 font-bold">–ú–∞—Ä–∂–∞</th>
                </tr>
              </thead>
              <tbody>
                {forecast.map((year, index) => {
                  const isProfit = year.profit >= 0;
                  return (
                    <tr key={index} className="border-b hover:bg-gray-50">
                      <td className="p-3 font-bold">{year.year}</td>
                      <td className="text-right p-3 text-green-600 font-semibold">{formatCurrency(year.revenue)}</td>
                      <td className="text-right p-3 text-red-600 font-semibold">{formatCurrency(year.expenses)}</td>
                      <td className={`text-right p-3 font-bold ${isProfit ? 'text-blue-600' : 'text-orange-600'}`}>
                        {formatCurrency(year.profit)}
                      </td>
                      <td className="text-right p-3 font-semibold">{year.margin}%</td>
                    </tr>
                  );
                })}
              </tbody>
              <tfoot>
                <tr className="border-t-2 font-bold bg-gray-100">
                  <td className="p-3">–ò–¢–û–ì–û 5 –ª–µ—Ç</td>
                  <td className="text-right p-3 text-green-700">
                    {formatCurrency(forecast.reduce((sum, y) => sum + y.revenue, 0))}
                  </td>
                  <td className="text-right p-3 text-red-700">
                    {formatCurrency(forecast.reduce((sum, y) => sum + y.expenses, 0))}
                  </td>
                  <td className="text-right p-3 text-blue-700">
                    {formatCurrency(forecast.reduce((sum, y) => sum + y.profit, 0))}
                  </td>
                  <td className="text-right p-3">
                    {(forecast.reduce((sum, y) => sum + y.margin, 0) / forecast.length).toFixed(1)}%
                  </td>
                </tr>
              </tfoot>
            </table>
          </div>
        </CardContent>
      </Card>

      {/* –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ */}
      {forecast[0]?.revenue_breakdown && forecast[0]?.expense_breakdown && (
        <Card className={`border-2 border-${scenarioConfig.color}-200`}>
          <CardHeader className={`bg-${scenarioConfig.color}-50`}>
            <CardTitle className="flex items-center gap-2">
              üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –≥–æ–¥–∞–º
            </CardTitle>
          </CardHeader>
          <CardContent className="pt-6">
            <div className="space-y-6">
              {/* –î–æ—Ö–æ–¥—ã */}
              <div>
                <h3 className="text-lg font-bold mb-4 text-green-700">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ—Ö–æ–¥–æ–≤</h3>
                <div className="overflow-x-auto">
                  <table className="w-full text-sm">
                    <thead>
                      <tr className="border-b-2 bg-green-50">
                        <th className="text-left p-3 font-bold">–ì–æ–¥</th>
                        {selectedCompany === '–£–§–ò–¶ –º–æ–¥–µ–ª—å' ? (
                          <>
                            <th className="text-right p-3 font-bold">–®–≤–µ–∏</th>
                            <th className="text-right p-3 font-bold">–£–±–æ—Ä—â–∏—Ü—ã</th>
                            <th className="text-right p-3 font-bold">–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥</th>
                          </>
                        ) : (
                          Object.keys(forecast[0]?.revenue_breakdown || {}).map((key, idx) => (
                            <th key={idx} className="text-right p-3 font-bold capitalize">{key.replace(/_/g, ' ')}</th>
                          ))
                        )}
                        <th className="text-right p-3 font-bold">–í—Å–µ–≥–æ</th>
                      </tr>
                    </thead>
                    <tbody>
                      {forecast.map((year, index) => {
                        const breakdown = year.revenue_breakdown || {};
                        const total = Object.values(breakdown).reduce((sum, val) => sum + (val || 0), 0);
                        return (
                          <tr key={index} className="border-b hover:bg-gray-50">
                            <td className="p-3 font-bold">{year.year}</td>
                            {selectedCompany === '–£–§–ò–¶ –º–æ–¥–µ–ª—å' ? (
                              <>
                                <td className="text-right p-3 text-emerald-600">{formatCurrency(breakdown.sewing || 0)}</td>
                                <td className="text-right p-3 text-teal-600">{formatCurrency(breakdown.cleaning || 0)}</td>
                                <td className="text-right p-3 text-cyan-600">{formatCurrency(breakdown.outsourcing || 0)}</td>
                              </>
                            ) : (
                              Object.entries(breakdown).map(([key, value], idx) => (
                                <td key={idx} className="text-right p-3 text-emerald-600">{formatCurrency(value || 0)}</td>
                              ))
                            )}
                            <td className="text-right p-3 font-bold text-green-700">{formatCurrency(year.revenue)}</td>
                          </tr>
                        );
                      })}
                    </tbody>
                    <tfoot>
                      <tr className="border-t-2 font-bold bg-green-100">
                        <td className="p-3">–ò–¢–û–ì–û 5 –ª–µ—Ç</td>
                        {selectedCompany === '–£–§–ò–¶ –º–æ–¥–µ–ª—å' ? (
                          <>
                            <td className="text-right p-3 text-emerald-700">
                              {formatCurrency(forecast.reduce((sum, y) => sum + (y.revenue_breakdown?.sewing || 0), 0))}
                            </td>
                            <td className="text-right p-3 text-teal-700">
                              {formatCurrency(forecast.reduce((sum, y) => sum + (y.revenue_breakdown?.cleaning || 0), 0))}
                            </td>
                            <td className="text-right p-3 text-cyan-700">
                              {formatCurrency(forecast.reduce((sum, y) => sum + (y.revenue_breakdown?.outsourcing || 0), 0))}
                            </td>
                          </>
                        ) : (
                          forecast[0]?.revenue_breakdown && Object.keys(forecast[0].revenue_breakdown).map((key, idx) => (
                            <td key={idx} className="text-right p-3 text-emerald-700">
                              {formatCurrency(forecast.reduce((sum, y) => sum + (y.revenue_breakdown?.[key] || 0), 0))}
                            </td>
                          ))
                        )}
                        <td className="text-right p-3 text-green-800">
                          {formatCurrency(forecast.reduce((sum, y) => sum + y.revenue, 0))}
                        </td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
              </div>

              {/* –†–∞—Å—Ö–æ–¥—ã */}
              <div>
                <h3 className="text-lg font-bold mb-4 text-red-700">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤</h3>
                <div className="overflow-x-auto">
                  <table className="w-full text-sm">
                    <thead>
                      <tr className="border-b-2 bg-red-50">
                        <th className="text-left p-3 font-bold">–ì–æ–¥</th>
                        {forecast[0]?.expense_breakdown && Object.keys(forecast[0].expense_breakdown).map((key, idx) => (
                          <th key={idx} className="text-right p-3 font-bold capitalize">{key.replace(/_/g, ' ')}</th>
                        ))}
                        <th className="text-right p-3 font-bold">–í—Å–µ–≥–æ</th>
                      </tr>
                    </thead>
                    <tbody>
                      {forecast.map((year, index) => {
                        const breakdown = year.expense_breakdown || {};
                        return (
                          <tr key={index} className="border-b hover:bg-gray-50">
                            <td className="p-3 font-bold">{year.year}</td>
                            {Object.entries(breakdown).map(([key, value], idx) => (
                              <td key={idx} className="text-right p-3 text-red-600">{formatCurrency(value || 0)}</td>
                            ))}
                            <td className="text-right p-3 font-bold text-red-700">{formatCurrency(year.expenses)}</td>
                          </tr>
                        );
                      })}
                    </tbody>
                    <tfoot>
                      <tr className="border-t-2 font-bold bg-red-100">
                        <td className="p-3">–ò–¢–û–ì–û 5 –ª–µ—Ç</td>
                        {forecast[0]?.expense_breakdown && Object.keys(forecast[0].expense_breakdown).map((key, idx) => (
                          <td key={idx} className="text-right p-3 text-red-700">
                            {formatCurrency(forecast.reduce((sum, y) => sum + (y.expense_breakdown?.[key] || 0), 0))}
                          </td>
                        ))}
                        <td className="text-right p-3 text-red-800">
                          {formatCurrency(forecast.reduce((sum, y) => sum + y.expenses, 0))}
                        </td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
              </div>

              {/* –ü–æ—è—Å–Ω–µ–Ω–∏–µ */}
              <div className="mt-4 p-4 bg-blue-50 rounded-lg border-l-4 border-blue-500">
                <p className="text-sm text-blue-800">
                  <strong>üí° –û –ø—Ä–æ–≥–Ω–æ–∑–µ:</strong> 
                  {selectedCompany === '–£–§–ò–¶ –º–æ–¥–µ–ª—å' ? (
                    <> –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö 2025 –≥–æ–¥–∞ —Å —É—á–µ—Ç–æ–º —Ç—Ä–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è. 
                    –î–æ—Ö–æ–¥—ã –≤–∫–ª—é—á–∞—é—Ç: –ø–æ—à–∏–≤ (—à–≤–µ–∏), –∫–ª–∏–Ω–∏–Ω–≥ (—É–±–æ—Ä—â–∏—Ü—ã) –∏ –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞. 
                    –†–∞—Å—Ö–æ–¥—ã: –§–û–¢ (—Ñ–æ–Ω–¥ –æ–ø–ª–∞—Ç—ã —Ç—Ä—É–¥–∞), —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ–º–µ—â–µ–Ω–∏–π. 
                    –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è: –ø–µ—Å—Å–∏–º–∏—Å—Ç–∏—á–Ω—ã–π –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π - 4.8% –µ–∂–µ–≥–æ–¥–Ω–æ, –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π - 6.9% –µ–∂–µ–≥–æ–¥–Ω–æ (—Å 2027 –≥–æ–¥–∞).</>
                  ) : (
                    <> –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –í–ê–® –î–û–ú –∏ –£–§–ò–¶ –∑–∞ 2025 –≥–æ–¥. 
                    –£—á–∏—Ç—ã–≤–∞–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. 
                    –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: 40 –º–ª–Ω —Ä—É–±–ª–µ–π. –ú–∞—Ä–∂–∞ —Ä–∞—Å—Ç–µ—Ç —Å 22% (2026) –¥–æ 37% (2030) –∑–∞ —Å—á–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.</>
                  )}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* –†–∞—Å—á–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ */}
      <Card className="border-2 border-green-200 bg-green-50">
        <CardHeader className="bg-green-100">
          <CardTitle className="flex items-center gap-2">
            <DollarSign className="h-6 w-6 text-green-600" />
            –†–∞—Å—á–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ ({scenarioConfig.name} —Å—Ü–µ–Ω–∞—Ä–∏–π)
          </CardTitle>
        </CardHeader>
        <CardContent className="pt-6">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</div>
              <div className="text-lg font-bold text-gray-800">{formatCurrency(investor_metrics.investment_amount)}</div>
            </div>
            
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">–ü—Ä–∏–±—ã–ª—å –∑–∞ 5 –ª–µ—Ç</div>
              <div className="text-lg font-bold text-green-600">{formatCurrency(investor_metrics.total_profit_5_years)}</div>
            </div>
            
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">–°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å/–≥–æ–¥</div>
              <div className="text-lg font-bold text-blue-600">{formatCurrency(investor_metrics.average_annual_profit)}</div>
            </div>
            
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">–°—Ä–µ–¥–Ω—è—è –º–∞—Ä–∂–∞</div>
              <div className="text-lg font-bold text-purple-600">{investor_metrics.average_margin.toFixed(1)}%</div>
            </div>
            
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">ROI –∑–∞ 5 –ª–µ—Ç</div>
              <div className="text-lg font-bold text-green-700">{investor_metrics.roi_5_years.toFixed(1)}%</div>
            </div>
            
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">–°—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏</div>
              <div className="text-lg font-bold text-orange-600">
                {typeof investor_metrics.payback_period === 'number' 
                  ? `${investor_metrics.payback_period} ${investor_metrics.payback_period === 1 ? '–≥–æ–¥' : investor_metrics.payback_period < 5 ? '–≥–æ–¥–∞' : '–ª–µ—Ç'}`
                  : investor_metrics.payback_period}
              </div>
            </div>
            
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">–†–æ—Å—Ç –≤—ã—Ä—É—á–∫–∏</div>
              <div className="text-lg font-bold text-teal-600">+{investor_metrics.revenue_growth_rate.toFixed(1)}%</div>
            </div>
            
            <div className="p-4 bg-white rounded-lg shadow-sm">
              <div className="text-xs text-gray-600 mb-1">–†–æ—Å—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤</div>
              <div className="text-lg font-bold text-red-600">+{investor_metrics.expense_growth_rate.toFixed(1)}%</div>
            </div>
          </div>

          <div className="mt-6 p-4 bg-white rounded-lg border-l-4 border-green-500">
            <p className="text-sm text-gray-700">
              <strong>–ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã:</strong> –ü—Ä–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö {formatCurrency(investor_metrics.investment_amount)} 
              {' '}–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏–±—ã–ª—å {formatCurrency(investor_metrics.total_profit_5_years)} –∑–∞ 5 –ª–µ—Ç 
              (ROI {investor_metrics.roi_5_years.toFixed(1)}%). –°—Ä–µ–¥–Ω—è—è –≥–æ–¥–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å: {formatCurrency(investor_metrics.average_annual_profit)}.
              {typeof investor_metrics.payback_period === 'number' && 
                ` –û–∫—É–ø–∞–µ–º–æ—Å—Ç—å: ${investor_metrics.payback_period} ${investor_metrics.payback_period === 1 ? '–≥–æ–¥' : investor_metrics.payback_period < 5 ? '–≥–æ–¥–∞' : '–ª–µ—Ç'}.`}
            </p>
          </div>
        </CardContent>
      </Card>

    </div>
  );
}

export default ForecastView;
