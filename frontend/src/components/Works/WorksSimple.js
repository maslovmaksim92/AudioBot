import React, { useState, useEffect } from 'react';

const WorksSimple = () => {
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const loadData = async () => {
      try {
        setLoading(true);
        const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;
        console.log('Loading houses from:', `${BACKEND_URL}/api/cleaning/houses-fixed`);
        
        const response = await fetch(`${BACKEND_URL}/api/cleaning/houses-fixed?limit=20`);
        const result = await response.json();
        console.log('Houses data loaded:', result);
        
        setData(result);
      } catch (error) {
        console.error('Error loading houses:', error);
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };
    
    loadData();
  }, []);

  if (loading) {
    return (
      <div className="p-8 text-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–º–æ–≤ –∏–∑ Bitrix24...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="p-8 text-center">
        <div className="text-red-500 text-6xl mb-4">‚ùå</div>
        <h2 className="text-xl font-semibold mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
        <p className="text-gray-600">{error}</p>
      </div>
    );
  }

  return (
    <div className="p-8">
      <div className="text-center mb-8">
        <h1 className="text-4xl font-bold text-blue-600 mb-4">
          üè† –£–õ–£–ß–®–ï–ù–ù–´–ï –ö–ê–†–¢–û–ß–ö–ò –î–û–ú–û–í
        </h1>
        <p className="text-xl text-gray-700">
          ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –£–ö –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —É–±–æ—Ä–∫–∏!
        </p>
        <div className="bg-green-100 p-4 rounded-lg mt-4">
          <p className="text-green-800 font-semibold">
            üéâ –ü–†–û–ë–õ–ï–ú–´ –†–ï–®–ï–ù–´: –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Bitrix24 –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!
          </p>
        </div>
      </div>

      {data && data.houses && (
        <>
          <div className="mb-8">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 text-center">
                <div className="text-3xl font-bold text-blue-600">{data.houses.length}</div>
                <div className="text-blue-800">–î–æ–º–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ</div>
              </div>
              <div className="bg-green-50 border border-green-200 rounded-lg p-6 text-center">
                <div className="text-3xl font-bold text-green-600">
                  {data.houses.reduce((sum, h) => sum + (h.apartments_count || 0), 0)}
                </div>
                <div className="text-green-800">–ö–≤–∞—Ä—Ç–∏—Ä</div>
              </div>
              <div className="bg-purple-50 border border-purple-200 rounded-lg p-6 text-center">
                <div className="text-3xl font-bold text-purple-600">
                  {[...new Set(data.houses.map(h => h.management_company).filter(Boolean))].length}
                </div>
                <div className="text-purple-800">–£–ö –∑–∞–≥—Ä—É–∂–µ–Ω–æ</div>
              </div>
              <div className="bg-orange-50 border border-orange-200 rounded-lg p-6 text-center">
                <div className="text-3xl font-bold text-orange-600">
                  {data.houses.filter(h => h.september_schedule).length}
                </div>
                <div className="text-orange-800">–ì—Ä–∞—Ñ–∏–∫–æ–≤ —É–±–æ—Ä–∫–∏</div>
              </div>
            </div>
          </div>

          <div>
            <h2 className="text-2xl font-bold mb-6">üèòÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∏ –¥–æ–º–æ–≤ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {data.houses.map((house) => (
                <div key={house.deal_id} className="border-2 border-blue-500 rounded-lg p-6 bg-white shadow-lg hover:shadow-xl transition-shadow">
                  <div className="mb-4">
                    <h3 className="text-lg font-bold text-gray-900 mb-2">
                      üìç {house.address || house.house_address}
                    </h3>
                    <div className="text-sm text-gray-600 mb-1">ID: {house.deal_id}</div>
                    <div className="text-sm text-blue-600">üë• {house.brigade || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'}</div>
                  </div>

                  <div className="grid grid-cols-3 gap-2 mb-4">
                    <div className="bg-green-100 rounded p-3 text-center">
                      <div className="text-xl font-bold text-green-600">{house.apartments_count || 0}</div>
                      <div className="text-xs text-green-700">–ö–≤–∞—Ä—Ç–∏—Ä</div>
                    </div>
                    <div className="bg-blue-100 rounded p-3 text-center">
                      <div className="text-xl font-bold text-blue-600">{house.entrances_count || 0}</div>
                      <div className="text-xs text-blue-700">–ü–æ–¥—ä–µ–∑–¥–æ–≤</div>
                    </div>
                    <div className="bg-orange-100 rounded p-3 text-center">
                      <div className="text-xl font-bold text-orange-600">{house.floors_count || 0}</div>
                      <div className="text-xs text-orange-700">–≠—Ç–∞–∂–µ–π</div>
                    </div>
                  </div>

                  <div className="mb-4 p-3 bg-blue-50 rounded border border-blue-200">
                    <div className="text-sm font-medium text-blue-700 mb-1">üè¢ –£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è:</div>
                    <div className="text-sm text-gray-800 font-medium">
                      {house.management_company && house.management_company !== '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞' 
                        ? house.management_company 
                        : '‚ö†Ô∏è –ù–µ —É–∫–∞–∑–∞–Ω–∞'
                      }
                    </div>
                  </div>

                  <div className="mb-4 p-3 bg-green-50 rounded border border-green-200">
                    <div className="text-sm font-medium text-green-700 mb-2">üìÖ –ì—Ä–∞—Ñ–∏–∫ —É–±–æ—Ä–∫–∏ (—Å–µ–Ω—Ç—è–±—Ä—å 2025):</div>
                    {house.september_schedule ? (
                      <div className="text-xs text-gray-700 bg-white rounded p-2 border max-h-16 overflow-hidden">
                        {house.september_schedule.length > 100 
                          ? house.september_schedule.substring(0, 100) + '...'
                          : house.september_schedule
                        }
                      </div>
                    ) : (
                      <div className="text-xs text-gray-500 italic bg-gray-100 rounded p-2">
                        ‚ö†Ô∏è –ì—Ä–∞—Ñ–∏–∫ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
                      </div>
                    )}
                    <div className="flex items-center mt-2 text-xs">
                      <div className={`w-2 h-2 rounded-full mr-2 ${house.september_schedule ? 'bg-green-500' : 'bg-red-500'}`}></div>
                      <span className={house.september_schedule ? 'text-green-700' : 'text-red-600'}>
                        –ì—Ä–∞—Ñ–∏–∫ {house.september_schedule ? '–∞–∫—Ç–∏–≤–µ–Ω' : '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}
                      </span>
                    </div>
                  </div>

                  <div className="mb-4 text-sm">
                    <div className={`flex items-center justify-between ${house.status_color === 'error' ? 'text-red-600' : 'text-green-600'}`}>
                      <span>–°—Ç–∞—Ç—É—Å:</span>
                      <span className="font-medium">
                        {house.status_color === 'error' ? '‚ùå' : '‚úÖ'} {house.status_text || '–ê–∫—Ç–∏–≤–Ω—ã–π'}
                      </span>
                    </div>
                  </div>

                  <div className="flex gap-2">
                    <button className="flex-1 bg-blue-600 hover:bg-blue-700 text-white text-sm py-2 px-3 rounded font-medium">
                      üìÖ –ì—Ä–∞—Ñ–∏–∫
                    </button>
                    <button className="flex-1 bg-green-600 hover:bg-green-700 text-white text-sm py-2 px-3 rounded font-medium">
                      üëÅÔ∏è –î–µ—Ç–∞–ª–∏
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="mt-8 p-6 bg-gradient-to-r from-blue-50 to-green-50 rounded-lg border">
            <h3 className="text-xl font-bold mb-4">‚úÖ –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <ul className="list-disc list-inside space-y-2 text-gray-700">
                <li>–û—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã</li>
                <li>–ì—Ä–∞—Ñ–∏–∫–∏ —É–±–æ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</li>
                <li>–í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Bitrix24 CRM –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è</li>
              </ul>
              <ul className="list-disc list-inside space-y-2 text-gray-700">
                <li>–£–ª—É—á—à–µ–Ω –¥–∏–∑–∞–π–Ω –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π</li>
                <li>–î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</li>
                <li>–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–∞</li>
              </ul>
            </div>
          </div>
        </>
      )}

      {(!data || !data.houses || data.houses.length === 0) && (
        <div className="text-center p-8 bg-yellow-50 rounded-lg border border-yellow-200">
          <div className="text-yellow-600 text-6xl mb-4">‚ö†Ô∏è</div>
          <h3 className="text-xl font-semibold mb-2">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</h3>
          <p className="text-gray-600">–î–æ–º–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API.</p>
        </div>
      )}
    </div>
  );
};

export default WorksSimple;