"""
Entry point –¥–ª—è VasDom AudioBot —Å –º–æ–¥—É–ª–µ–º —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏—è
–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Render.com –∏ supervisor —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
backend_path = os.path.join(os.path.dirname(__file__), 'backend')
sys.path.insert(0, backend_path)

try:
    # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –º–æ–¥—É–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    import sys
    import os
    backend_path = os.path.join(os.path.dirname(__file__), 'backend')
    if backend_path not in sys.path:
        sys.path.insert(0, backend_path)
    
    from app.main import app
    print("‚úÖ –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏–µ–º v2.0")
except ImportError as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
    print("üîÑ Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–π server.py")
    
    # Fallback –Ω–∞ —Å—Ç–∞—Ä–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        from server import app
        print("‚úÖ –ó–∞–ø—É—Å–∫ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    except ImportError as fallback_error:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {fallback_error}")
        # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from fastapi import FastAPI
        app = FastAPI(title="VasDom AudioBot - Emergency Mode")
        
        @app.get("/")
        async def emergency_root():
            return {
                "status": "emergency_mode",
                "message": "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ –∞–≤–∞—Ä–∏–π–Ω–æ–º —Ä–µ–∂–∏–º–µ",
                "error": str(fallback_error)
            }

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(
        "main:app",
        host="0.0.0.0",
        port=int(os.getenv("PORT", 8001)),
        reload=False,  # –í production –æ—Ç–∫–ª—é—á–∞–µ–º reload
        log_level="info"
    )