#!/usr/bin/env python3
"""
üß™ –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Bitrix24
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –Ω–æ–≤–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import requests
import json
import os
from datetime import datetime
import sys

def test_bitrix_webhook(webhook_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Bitrix24"""
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook: {webhook_url}")
    
    # –¢–µ—Å—Ç 1: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    try:
        response = requests.get(f"{webhook_url}app.info")
        if response.status_code == 200:
            app_info = response.json()
            print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {app_info.get('result', {}).get('ID', 'Unknown')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: {e}")
        return False

def test_crm_access(webhook_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ CRM"""
    print(f"\nüè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ CRM...")
    
    # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å–¥–µ–ª–æ–∫ (–¥–æ–º–æ–≤)
    try:
        params = {
            'select[]': ['ID', 'TITLE', 'UF_CRM_1669704529022', 'UF_CRM_1669705507390', 'UF_CRM_1669704631166'],
            'filter[CATEGORY_ID]': '0',
            'start': '0'
        }
        
        response = requests.get(f"{webhook_url}crm.deal.list", params=params)
        
        if response.status_code == 200:
            data = response.json()
            deals = data.get('result', [])
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–º–æ–≤: {len(deals)}")
            
            if deals:
                house = deals[0]
                print(f"   –ü—Ä–∏–º–µ—Ä –¥–æ–º–∞: {house.get('TITLE', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                print(f"   ID: {house.get('ID')}")
                apartments = house.get('UF_CRM_1669704529022', '0')
                entrances = house.get('UF_CRM_1669705507390', '0') 
                floors = house.get('UF_CRM_1669704631166', '0')
                print(f"   –ö–≤–∞—Ä—Ç–∏—Ä—ã: {apartments}, –ü–æ–¥—ä–µ–∑–¥—ã: {entrances}, –≠—Ç–∞–∂–∏: {floors}")
            
            return len(deals)
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CRM: {response.status_code} - {response.text}")
            return 0
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ CRM: {e}")
        return 0

def test_users_access(webhook_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    print(f"\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")
    
    try:
        response = requests.get(f"{webhook_url}user.get")
        
        if response.status_code == 200:
            data = response.json()
            users = data.get('result', [])
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            
            if users:
                user = users[0]
                print(f"   –ü—Ä–∏–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.get('NAME', '')} {user.get('LAST_NAME', '')}")
                print(f"   Email: {user.get('EMAIL', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                print(f"   –î–æ–ª–∂–Ω–æ—Å—Ç—å: {user.get('WORK_POSITION', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
            
            return len(users)
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {response.status_code} - {response.text}")
            return 0
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return 0

def test_departments_access(webhook_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º"""
    print(f"\nüè¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º...")
    
    try:
        response = requests.get(f"{webhook_url}department.get")
        
        if response.status_code == 200:
            data = response.json()
            departments = data.get('result', [])
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π: {len(departments)}")
            
            if departments:
                dept = departments[0]
                print(f"   –ü—Ä–∏–º–µ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {dept.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                print(f"   ID: {dept.get('ID')}")
                print(f"   –†–æ–¥–∏—Ç–µ–ª—å: {dept.get('PARENT', '–ö–æ—Ä–Ω–µ–≤–æ–µ')}")
            
            return len(departments)
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π: {response.status_code} - {response.text}")
            return 0
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π: {e}")
        return 0

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò BITRIX24 –¥–ª—è AudioBot")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ webhook URL –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
    webhook_url = None
    
    if len(sys.argv) > 1:
        webhook_url = sys.argv[1]
    else:
        webhook_url = os.environ.get('BITRIX_WEBHOOK_URL')
    
    if not webhook_url:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω WEBHOOK_URL!")
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python test_bitrix_integration.py https://vas-dom.bitrix24.ru/rest/USER_ID/TOKEN/")
        print("–∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å—Ä–µ–¥—ã BITRIX_WEBHOOK_URL")
        return False
    
    # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ URL –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ /
    if not webhook_url.endswith('/'):
        webhook_url += '/'
    
    print(f"üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π URL: {webhook_url}")
    print(f"‚è∞ –í—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    results = {}
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    results['connection'] = test_bitrix_webhook(webhook_url)
    
    if not results['connection']:
        print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Bitrix24")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å webhook URL")
        print("2. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("3. –°—Ç–∞—Ç—É—Å –ø–æ—Ä—Ç–∞–ª–∞ Bitrix24")
        return False
    
    # –¢–µ—Å—Ç 2: –î–æ—Å—Ç—É–ø –∫ CRM
    results['houses'] = test_crm_access(webhook_url)
    
    # –¢–µ—Å—Ç 3: –î–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    results['users'] = test_users_access(webhook_url)
    
    # –¢–µ—Å—Ç 4: –î–æ—Å—Ç—É–ø –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º  
    results['departments'] = test_departments_access(webhook_url)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Bitrix24: {'‚úÖ –û–ö' if results['connection'] else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"üè† –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–º–æ–≤: {results['houses']}")
    print(f"üë• –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {results['users']}")
    print(f"üè¢ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π: {results['departments']}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    success = True
    if results['houses'] < 400:  # –û–∂–∏–¥–∞–µ–º –º–∏–Ω–∏–º—É–º 400 –¥–æ–º–æ–≤
        print(f"‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –î–æ–º–æ–≤ –º–µ–Ω—å—à–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ (–º–∏–Ω–∏–º—É–º 400)")
        success = False
        
    if results['users'] < 50:  # –û–∂–∏–¥–∞–µ–º –º–∏–Ω–∏–º—É–º 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print(f"‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–µ–Ω—å—à–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ (–º–∏–Ω–∏–º—É–º 50)")
        success = False
    
    if success:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("AudioBot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –Ω–æ–≤—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º Bitrix24")
    else:
        print("\n‚ö†Ô∏è  –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)