#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ Telegram API
"""
import asyncio
import httpx
import os
from dotenv import load_dotenv

load_dotenv('/app/backend/.env')

BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TEST_CHAT_ID = os.getenv('TELEGRAM_TARGET_CHAT_ID')  # –¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞

API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

async def test_send_photo():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–æ—Ç–æ"""
    print(f"ü§ñ Testing Telegram Bot")
    print(f"Token: {BOT_TOKEN[:20]}...")
    print(f"Chat ID: {TEST_CHAT_ID}")
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    try:
        async with httpx.AsyncClient(timeout=30) as client:
            print("\nüîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
            response = await client.get(f"{API_URL}/getMe")
            if response.status_code == 200:
                bot_info = response.json()
                print(f"‚úÖ –ë–æ—Ç: @{bot_info['result']['username']}")
                print(f"   ID: {bot_info['result']['id']}")
                print(f"   –ò–º—è: {bot_info['result']['first_name']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ")
                
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å updates —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å chat_id
            print("\nüîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
            response2 = await client.get(f"{API_URL}/getUpdates?limit=5")
            if response2.status_code == 200:
                updates = response2.json()
                print(f"Updates: {updates}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π file_id (–Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π)
    # –î–ª—è —Ç–µ—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    test_photo_url = "https://picsum.photos/800/600"
    
    try:
        async with httpx.AsyncClient(timeout=30) as client:
            # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–∏–º —Ñ–æ—Ç–æ –ø–æ URL, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å file_id
            print("\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–æ—Ç–æ –ø–æ URL...")
            payload = {
                "chat_id": TEST_CHAT_ID,
                "photo": test_photo_url,
                "caption": "üß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ\n\n–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞."
            }
            
            response = await client.post(f"{API_URL}/sendPhoto", json=payload)
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                print(f"Response: {result}")
                
                # –ü–æ–ª—É—á–∞–µ–º file_id
                photo = result.get('result', {}).get('photo', [])
                if photo:
                    file_id = photo[-1].get('file_id')  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
                    print(f"\nüìù File ID: {file_id}")
                    
                    # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –∂–µ —Ñ–æ—Ç–æ –æ–±—Ä–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ file_id
                    print("\nüì§ –ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ file_id...")
                    payload2 = {
                        "chat_id": TEST_CHAT_ID,
                        "photo": file_id,
                        "caption": "‚úÖ –≠—Ç–æ –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ file_id"
                    }
                    
                    response2 = await client.post(f"{API_URL}/sendPhoto", json=payload2)
                    
                    if response2.status_code == 200:
                        print("‚úÖ –ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∏: {response2.text}")
                        
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
                print(f"Response: {response.text}")
                
    except Exception as e:
        print(f"‚ùå Exception: {e}")

if __name__ == "__main__":
    asyncio.run(test_send_photo())
